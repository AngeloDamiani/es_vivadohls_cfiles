// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gcd.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gcd::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gcd::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> gcd::ap_ST_fsm_state1 = "1";
const sc_lv<12> gcd::ap_ST_fsm_state2 = "10";
const sc_lv<12> gcd::ap_ST_fsm_state3 = "100";
const sc_lv<12> gcd::ap_ST_fsm_state4 = "1000";
const sc_lv<12> gcd::ap_ST_fsm_state5 = "10000";
const sc_lv<12> gcd::ap_ST_fsm_state6 = "100000";
const sc_lv<12> gcd::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> gcd::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> gcd::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> gcd::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> gcd::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> gcd::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> gcd::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gcd::ap_const_lv32_1 = "1";
const sc_lv<1> gcd::ap_const_lv1_0 = "0";
const sc_lv<32> gcd::ap_const_lv32_2 = "10";
const sc_lv<32> gcd::ap_const_lv32_3 = "11";
const sc_lv<32> gcd::ap_const_lv32_4 = "100";
const sc_lv<32> gcd::ap_const_lv32_5 = "101";
const sc_lv<32> gcd::ap_const_lv32_A = "1010";
const sc_lv<32> gcd::ap_const_lv32_6 = "110";
const sc_lv<32> gcd::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<1> gcd::ap_const_lv1_1 = "1";
const sc_lv<32> gcd::ap_const_lv32_17 = "10111";
const sc_lv<32> gcd::ap_const_lv32_1E = "11110";
const sc_lv<8> gcd::ap_const_lv8_FF = "11111111";
const sc_lv<23> gcd::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> gcd::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<5> gcd::ap_const_lv5_1 = "1";
const sc_lv<5> gcd::ap_const_lv5_4 = "100";
const sc_lv<5> gcd::ap_const_lv5_3 = "11";
const sc_lv<32> gcd::ap_const_lv32_B = "1011";
const bool gcd::ap_const_boolean_1 = true;

gcd::gcd(sc_module_name name) : sc_module(name), mVcdFile(0) {
    gcd_fsub_32ns_32nbkb_U1 = new gcd_fsub_32ns_32nbkb<1,5,32,32,32>("gcd_fsub_32ns_32nbkb_U1");
    gcd_fsub_32ns_32nbkb_U1->clk(ap_clk);
    gcd_fsub_32ns_32nbkb_U1->reset(ap_rst);
    gcd_fsub_32ns_32nbkb_U1->din0(r_reg_67);
    gcd_fsub_32ns_32nbkb_U1->din1(m_assign_3_reg_46);
    gcd_fsub_32ns_32nbkb_U1->ce(ap_var_for_const0);
    gcd_fsub_32ns_32nbkb_U1->dout(grp_fu_91_p2);
    gcd_fcmp_32ns_32ncud_U2 = new gcd_fcmp_32ns_32ncud<1,1,32,32,1>("gcd_fcmp_32ns_32ncud_U2");
    gcd_fcmp_32ns_32ncud_U2->din0(grp_fu_97_p0);
    gcd_fcmp_32ns_32ncud_U2->din1(grp_fu_97_p1);
    gcd_fcmp_32ns_32ncud_U2->opcode(grp_fu_97_opcode);
    gcd_fcmp_32ns_32ncud_U2->dout(grp_fu_97_p2);
    gcd_fcmp_32ns_32ncud_U3 = new gcd_fcmp_32ns_32ncud<1,1,32,32,1>("gcd_fcmp_32ns_32ncud_U3");
    gcd_fcmp_32ns_32ncud_U3->din0(n);
    gcd_fcmp_32ns_32ncud_U3->din1(ap_var_for_const1);
    gcd_fcmp_32ns_32ncud_U3->opcode(grp_fu_103_opcode);
    gcd_fcmp_32ns_32ncud_U3->dout(grp_fu_103_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_0_reg_79 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_103_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( or_cond_fu_192_p2 );

    SC_METHOD(thread_grp_fu_97_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( or_cond_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_97_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( m_assign_3_reg_46 );
    sensitive << ( r_reg_67 );

    SC_METHOD(thread_grp_fu_97_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( m_assign_3_reg_46 );

    SC_METHOD(thread_m_assign_1_fu_211_p3);
    sensitive << ( m );
    sensitive << ( tmp_10_fu_198_p2 );
    sensitive << ( m_assign_fu_207_p1 );

    SC_METHOD(thread_m_assign_2_to_int_fu_238_p1);
    sensitive << ( m_assign_3_reg_46 );

    SC_METHOD(thread_m_assign_fu_207_p1);
    sensitive << ( m_assign_neg_fu_202_p2 );

    SC_METHOD(thread_m_assign_neg_fu_202_p2);
    sensitive << ( m_to_int_reg_337 );

    SC_METHOD(thread_m_to_int_fu_112_p1);
    sensitive << ( m );

    SC_METHOD(thread_n_assign_1_fu_231_p3);
    sensitive << ( n );
    sensitive << ( tmp_12_fu_218_p2 );
    sensitive << ( n_assign_fu_227_p1 );

    SC_METHOD(thread_n_assign_2_to_int_fu_279_p1);
    sensitive << ( r_reg_67 );

    SC_METHOD(thread_n_assign_fu_227_p1);
    sensitive << ( n_assign_neg_fu_222_p2 );

    SC_METHOD(thread_n_assign_neg_fu_222_p2);
    sensitive << ( n_to_int_reg_353 );

    SC_METHOD(thread_n_to_int_fu_148_p1);
    sensitive << ( n );

    SC_METHOD(thread_notlhs3_fu_256_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_13_fu_242_p4 );

    SC_METHOD(thread_notlhs4_fu_297_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_18_fu_283_p4 );

    SC_METHOD(thread_notlhs8_fu_166_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_5_fu_152_p4 );

    SC_METHOD(thread_notlhs_fu_130_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_116_p4 );

    SC_METHOD(thread_notrhs3_fu_262_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_14_fu_252_p1 );

    SC_METHOD(thread_notrhs4_fu_303_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_19_fu_293_p1 );

    SC_METHOD(thread_notrhs9_fu_172_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_6_fu_162_p1 );

    SC_METHOD(thread_notrhs_fu_136_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_126_p1 );

    SC_METHOD(thread_or_cond_fu_192_p2);
    sensitive << ( tmp_4_fu_184_p2 );
    sensitive << ( tmp_9_fu_188_p2 );

    SC_METHOD(thread_tmp_10_fu_198_p2);
    sensitive << ( tmp_2_reg_342 );
    sensitive << ( tmp_s_reg_372 );

    SC_METHOD(thread_tmp_12_fu_218_p2);
    sensitive << ( tmp_7_reg_358 );
    sensitive << ( tmp_11_reg_377 );

    SC_METHOD(thread_tmp_13_fu_242_p4);
    sensitive << ( m_assign_2_to_int_fu_238_p1 );

    SC_METHOD(thread_tmp_14_fu_252_p1);
    sensitive << ( m_assign_2_to_int_fu_238_p1 );

    SC_METHOD(thread_tmp_15_fu_268_p2);
    sensitive << ( notrhs3_fu_262_p2 );
    sensitive << ( notlhs3_fu_256_p2 );

    SC_METHOD(thread_tmp_17_fu_274_p2);
    sensitive << ( tmp_16_reg_392 );
    sensitive << ( tmp_15_fu_268_p2 );

    SC_METHOD(thread_tmp_18_fu_283_p4);
    sensitive << ( n_assign_2_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_19_fu_293_p1);
    sensitive << ( n_assign_2_to_int_fu_279_p1 );

    SC_METHOD(thread_tmp_1_fu_126_p1);
    sensitive << ( m_to_int_fu_112_p1 );

    SC_METHOD(thread_tmp_20_fu_309_p2);
    sensitive << ( notrhs4_fu_303_p2 );
    sensitive << ( notlhs4_fu_297_p2 );

    SC_METHOD(thread_tmp_21_fu_315_p2);
    sensitive << ( tmp_15_reg_397 );
    sensitive << ( tmp_20_fu_309_p2 );

    SC_METHOD(thread_tmp_23_fu_320_p2);
    sensitive << ( tmp_22_reg_405 );
    sensitive << ( tmp_21_fu_315_p2 );

    SC_METHOD(thread_tmp_2_fu_142_p2);
    sensitive << ( notrhs_fu_136_p2 );
    sensitive << ( notlhs_fu_130_p2 );

    SC_METHOD(thread_tmp_4_fu_184_p2);
    sensitive << ( tmp_2_reg_342 );
    sensitive << ( tmp_3_reg_348 );

    SC_METHOD(thread_tmp_5_fu_152_p4);
    sensitive << ( n_to_int_fu_148_p1 );

    SC_METHOD(thread_tmp_6_fu_162_p1);
    sensitive << ( n_to_int_fu_148_p1 );

    SC_METHOD(thread_tmp_7_fu_178_p2);
    sensitive << ( notrhs9_fu_172_p2 );
    sensitive << ( notlhs8_fu_166_p2 );

    SC_METHOD(thread_tmp_9_fu_188_p2);
    sensitive << ( tmp_7_reg_358 );
    sensitive << ( tmp_8_reg_364 );

    SC_METHOD(thread_tmp_fu_116_p4);
    sensitive << ( m_to_int_fu_112_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( or_cond_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_23_fu_320_p2 );
    sensitive << ( tmp_17_fu_274_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gcd_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m, "(port)m");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_to_int_fu_112_p1, "m_to_int_fu_112_p1");
    sc_trace(mVcdFile, m_to_int_reg_337, "m_to_int_reg_337");
    sc_trace(mVcdFile, tmp_2_fu_142_p2, "tmp_2_fu_142_p2");
    sc_trace(mVcdFile, tmp_2_reg_342, "tmp_2_reg_342");
    sc_trace(mVcdFile, grp_fu_97_p2, "grp_fu_97_p2");
    sc_trace(mVcdFile, tmp_3_reg_348, "tmp_3_reg_348");
    sc_trace(mVcdFile, n_to_int_fu_148_p1, "n_to_int_fu_148_p1");
    sc_trace(mVcdFile, n_to_int_reg_353, "n_to_int_reg_353");
    sc_trace(mVcdFile, tmp_7_fu_178_p2, "tmp_7_fu_178_p2");
    sc_trace(mVcdFile, tmp_7_reg_358, "tmp_7_reg_358");
    sc_trace(mVcdFile, grp_fu_103_p2, "grp_fu_103_p2");
    sc_trace(mVcdFile, tmp_8_reg_364, "tmp_8_reg_364");
    sc_trace(mVcdFile, tmp_s_reg_372, "tmp_s_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, or_cond_fu_192_p2, "or_cond_fu_192_p2");
    sc_trace(mVcdFile, tmp_11_reg_377, "tmp_11_reg_377");
    sc_trace(mVcdFile, m_assign_1_fu_211_p3, "m_assign_1_fu_211_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, n_assign_1_fu_231_p3, "n_assign_1_fu_231_p3");
    sc_trace(mVcdFile, tmp_16_reg_392, "tmp_16_reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_15_fu_268_p2, "tmp_15_fu_268_p2");
    sc_trace(mVcdFile, tmp_15_reg_397, "tmp_15_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_22_reg_405, "tmp_22_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_91_p2, "grp_fu_91_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, m_assign_3_reg_46, "m_assign_3_reg_46");
    sc_trace(mVcdFile, r_reg_67, "r_reg_67");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_23_fu_320_p2, "tmp_23_fu_320_p2");
    sc_trace(mVcdFile, result_reg_56, "result_reg_56");
    sc_trace(mVcdFile, tmp_17_fu_274_p2, "tmp_17_fu_274_p2");
    sc_trace(mVcdFile, p_0_reg_79, "p_0_reg_79");
    sc_trace(mVcdFile, grp_fu_97_p0, "grp_fu_97_p0");
    sc_trace(mVcdFile, grp_fu_97_p1, "grp_fu_97_p1");
    sc_trace(mVcdFile, tmp_fu_116_p4, "tmp_fu_116_p4");
    sc_trace(mVcdFile, tmp_1_fu_126_p1, "tmp_1_fu_126_p1");
    sc_trace(mVcdFile, notrhs_fu_136_p2, "notrhs_fu_136_p2");
    sc_trace(mVcdFile, notlhs_fu_130_p2, "notlhs_fu_130_p2");
    sc_trace(mVcdFile, tmp_5_fu_152_p4, "tmp_5_fu_152_p4");
    sc_trace(mVcdFile, tmp_6_fu_162_p1, "tmp_6_fu_162_p1");
    sc_trace(mVcdFile, notrhs9_fu_172_p2, "notrhs9_fu_172_p2");
    sc_trace(mVcdFile, notlhs8_fu_166_p2, "notlhs8_fu_166_p2");
    sc_trace(mVcdFile, tmp_4_fu_184_p2, "tmp_4_fu_184_p2");
    sc_trace(mVcdFile, tmp_9_fu_188_p2, "tmp_9_fu_188_p2");
    sc_trace(mVcdFile, m_assign_neg_fu_202_p2, "m_assign_neg_fu_202_p2");
    sc_trace(mVcdFile, tmp_10_fu_198_p2, "tmp_10_fu_198_p2");
    sc_trace(mVcdFile, m_assign_fu_207_p1, "m_assign_fu_207_p1");
    sc_trace(mVcdFile, n_assign_neg_fu_222_p2, "n_assign_neg_fu_222_p2");
    sc_trace(mVcdFile, tmp_12_fu_218_p2, "tmp_12_fu_218_p2");
    sc_trace(mVcdFile, n_assign_fu_227_p1, "n_assign_fu_227_p1");
    sc_trace(mVcdFile, m_assign_2_to_int_fu_238_p1, "m_assign_2_to_int_fu_238_p1");
    sc_trace(mVcdFile, tmp_13_fu_242_p4, "tmp_13_fu_242_p4");
    sc_trace(mVcdFile, tmp_14_fu_252_p1, "tmp_14_fu_252_p1");
    sc_trace(mVcdFile, notrhs3_fu_262_p2, "notrhs3_fu_262_p2");
    sc_trace(mVcdFile, notlhs3_fu_256_p2, "notlhs3_fu_256_p2");
    sc_trace(mVcdFile, n_assign_2_to_int_fu_279_p1, "n_assign_2_to_int_fu_279_p1");
    sc_trace(mVcdFile, tmp_18_fu_283_p4, "tmp_18_fu_283_p4");
    sc_trace(mVcdFile, tmp_19_fu_293_p1, "tmp_19_fu_293_p1");
    sc_trace(mVcdFile, notrhs4_fu_303_p2, "notrhs4_fu_303_p2");
    sc_trace(mVcdFile, notlhs4_fu_297_p2, "notlhs4_fu_297_p2");
    sc_trace(mVcdFile, tmp_20_fu_309_p2, "tmp_20_fu_309_p2");
    sc_trace(mVcdFile, tmp_21_fu_315_p2, "tmp_21_fu_315_p2");
    sc_trace(mVcdFile, grp_fu_97_opcode, "grp_fu_97_opcode");
    sc_trace(mVcdFile, grp_fu_103_opcode, "grp_fu_103_opcode");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("gcd.hdltvin.dat");
    mHdltvoutHandle.open("gcd.hdltvout.dat");
}

gcd::~gcd() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete gcd_fsub_32ns_32nbkb_U1;
    delete gcd_fcmp_32ns_32ncud_U2;
    delete gcd_fcmp_32ns_32ncud_U3;
}

void gcd::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void gcd::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void gcd::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_320_p2.read()))) {
        m_assign_3_reg_46 = r_reg_67.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_assign_3_reg_46 = n_assign_1_fu_231_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_17_fu_274_p2.read(), ap_const_lv1_1))) {
        p_0_reg_79 = result_reg_56.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(or_cond_fu_192_p2.read(), ap_const_lv1_1))) {
        p_0_reg_79 = ap_const_lv32_BF800000;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_reg_67 = grp_fu_91_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_274_p2.read()))) {
        r_reg_67 = result_reg_56.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_320_p2.read()))) {
        result_reg_56 = m_assign_3_reg_46.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        result_reg_56 = m_assign_1_fu_211_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_to_int_reg_337 = m_to_int_fu_112_p1.read();
        n_to_int_reg_353 = n_to_int_fu_148_p1.read();
        tmp_2_reg_342 = tmp_2_fu_142_p2.read();
        tmp_3_reg_348 = grp_fu_97_p2.read();
        tmp_7_reg_358 = tmp_7_fu_178_p2.read();
        tmp_8_reg_364 = grp_fu_103_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(or_cond_fu_192_p2.read(), ap_const_lv1_0))) {
        tmp_11_reg_377 = grp_fu_103_p2.read();
        tmp_s_reg_372 = grp_fu_97_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_15_reg_397 = tmp_15_fu_268_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_16_reg_392 = grp_fu_97_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_22_reg_405 = grp_fu_97_p2.read();
    }
}

void gcd::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gcd::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void gcd::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void gcd::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gcd::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gcd::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gcd::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gcd::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gcd::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void gcd::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gcd::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gcd::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gcd::thread_ap_return() {
    ap_return = p_0_reg_79.read();
}

void gcd::thread_grp_fu_103_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(or_cond_fu_192_p2.read(), ap_const_lv1_0))) {
        grp_fu_103_opcode = ap_const_lv5_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_103_opcode = ap_const_lv5_1;
    } else {
        grp_fu_103_opcode = "XXXXX";
    }
}

void gcd::thread_grp_fu_97_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_97_opcode = ap_const_lv5_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(or_cond_fu_192_p2.read(), ap_const_lv1_0))) {
        grp_fu_97_opcode = ap_const_lv5_4;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_97_opcode = ap_const_lv5_1;
    } else {
        grp_fu_97_opcode = "XXXXX";
    }
}

void gcd::thread_grp_fu_97_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_97_p0 = r_reg_67.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_97_p0 = m_assign_3_reg_46.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        grp_fu_97_p0 = m.read();
    } else {
        grp_fu_97_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gcd::thread_grp_fu_97_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_97_p1 = m_assign_3_reg_46.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_97_p1 = ap_const_lv32_0;
    } else {
        grp_fu_97_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void gcd::thread_m_assign_1_fu_211_p3() {
    m_assign_1_fu_211_p3 = (!tmp_10_fu_198_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_10_fu_198_p2.read()[0].to_bool())? m_assign_fu_207_p1.read(): m.read());
}

void gcd::thread_m_assign_2_to_int_fu_238_p1() {
    m_assign_2_to_int_fu_238_p1 = m_assign_3_reg_46.read();
}

void gcd::thread_m_assign_fu_207_p1() {
    m_assign_fu_207_p1 = m_assign_neg_fu_202_p2.read();
}

void gcd::thread_m_assign_neg_fu_202_p2() {
    m_assign_neg_fu_202_p2 = (m_to_int_reg_337.read() ^ ap_const_lv32_80000000);
}

void gcd::thread_m_to_int_fu_112_p1() {
    m_to_int_fu_112_p1 = m.read();
}

void gcd::thread_n_assign_1_fu_231_p3() {
    n_assign_1_fu_231_p3 = (!tmp_12_fu_218_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_218_p2.read()[0].to_bool())? n_assign_fu_227_p1.read(): n.read());
}

void gcd::thread_n_assign_2_to_int_fu_279_p1() {
    n_assign_2_to_int_fu_279_p1 = r_reg_67.read();
}

void gcd::thread_n_assign_fu_227_p1() {
    n_assign_fu_227_p1 = n_assign_neg_fu_222_p2.read();
}

void gcd::thread_n_assign_neg_fu_222_p2() {
    n_assign_neg_fu_222_p2 = (n_to_int_reg_353.read() ^ ap_const_lv32_80000000);
}

void gcd::thread_n_to_int_fu_148_p1() {
    n_to_int_fu_148_p1 = n.read();
}

void gcd::thread_notlhs3_fu_256_p2() {
    notlhs3_fu_256_p2 = (!tmp_13_fu_242_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_242_p4.read() != ap_const_lv8_FF);
}

void gcd::thread_notlhs4_fu_297_p2() {
    notlhs4_fu_297_p2 = (!tmp_18_fu_283_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_18_fu_283_p4.read() != ap_const_lv8_FF);
}

void gcd::thread_notlhs8_fu_166_p2() {
    notlhs8_fu_166_p2 = (!tmp_5_fu_152_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_152_p4.read() != ap_const_lv8_FF);
}

void gcd::thread_notlhs_fu_130_p2() {
    notlhs_fu_130_p2 = (!tmp_fu_116_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_116_p4.read() != ap_const_lv8_FF);
}

void gcd::thread_notrhs3_fu_262_p2() {
    notrhs3_fu_262_p2 = (!tmp_14_fu_252_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_14_fu_252_p1.read() == ap_const_lv23_0);
}

void gcd::thread_notrhs4_fu_303_p2() {
    notrhs4_fu_303_p2 = (!tmp_19_fu_293_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_19_fu_293_p1.read() == ap_const_lv23_0);
}

void gcd::thread_notrhs9_fu_172_p2() {
    notrhs9_fu_172_p2 = (!tmp_6_fu_162_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_162_p1.read() == ap_const_lv23_0);
}

void gcd::thread_notrhs_fu_136_p2() {
    notrhs_fu_136_p2 = (!tmp_1_fu_126_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_126_p1.read() == ap_const_lv23_0);
}

void gcd::thread_or_cond_fu_192_p2() {
    or_cond_fu_192_p2 = (tmp_4_fu_184_p2.read() & tmp_9_fu_188_p2.read());
}

void gcd::thread_tmp_10_fu_198_p2() {
    tmp_10_fu_198_p2 = (tmp_2_reg_342.read() & tmp_s_reg_372.read());
}

void gcd::thread_tmp_12_fu_218_p2() {
    tmp_12_fu_218_p2 = (tmp_7_reg_358.read() & tmp_11_reg_377.read());
}

void gcd::thread_tmp_13_fu_242_p4() {
    tmp_13_fu_242_p4 = m_assign_2_to_int_fu_238_p1.read().range(30, 23);
}

void gcd::thread_tmp_14_fu_252_p1() {
    tmp_14_fu_252_p1 = m_assign_2_to_int_fu_238_p1.read().range(23-1, 0);
}

void gcd::thread_tmp_15_fu_268_p2() {
    tmp_15_fu_268_p2 = (notrhs3_fu_262_p2.read() | notlhs3_fu_256_p2.read());
}

void gcd::thread_tmp_17_fu_274_p2() {
    tmp_17_fu_274_p2 = (tmp_15_fu_268_p2.read() & tmp_16_reg_392.read());
}

void gcd::thread_tmp_18_fu_283_p4() {
    tmp_18_fu_283_p4 = n_assign_2_to_int_fu_279_p1.read().range(30, 23);
}

void gcd::thread_tmp_19_fu_293_p1() {
    tmp_19_fu_293_p1 = n_assign_2_to_int_fu_279_p1.read().range(23-1, 0);
}

void gcd::thread_tmp_1_fu_126_p1() {
    tmp_1_fu_126_p1 = m_to_int_fu_112_p1.read().range(23-1, 0);
}

void gcd::thread_tmp_20_fu_309_p2() {
    tmp_20_fu_309_p2 = (notrhs4_fu_303_p2.read() | notlhs4_fu_297_p2.read());
}

void gcd::thread_tmp_21_fu_315_p2() {
    tmp_21_fu_315_p2 = (tmp_20_fu_309_p2.read() & tmp_15_reg_397.read());
}

void gcd::thread_tmp_23_fu_320_p2() {
    tmp_23_fu_320_p2 = (tmp_21_fu_315_p2.read() & tmp_22_reg_405.read());
}

void gcd::thread_tmp_2_fu_142_p2() {
    tmp_2_fu_142_p2 = (notrhs_fu_136_p2.read() | notlhs_fu_130_p2.read());
}

void gcd::thread_tmp_4_fu_184_p2() {
    tmp_4_fu_184_p2 = (tmp_2_reg_342.read() & tmp_3_reg_348.read());
}

void gcd::thread_tmp_5_fu_152_p4() {
    tmp_5_fu_152_p4 = n_to_int_fu_148_p1.read().range(30, 23);
}

void gcd::thread_tmp_6_fu_162_p1() {
    tmp_6_fu_162_p1 = n_to_int_fu_148_p1.read().range(23-1, 0);
}

void gcd::thread_tmp_7_fu_178_p2() {
    tmp_7_fu_178_p2 = (notrhs9_fu_172_p2.read() | notlhs8_fu_166_p2.read());
}

void gcd::thread_tmp_9_fu_188_p2() {
    tmp_9_fu_188_p2 = (tmp_7_reg_358.read() & tmp_8_reg_364.read());
}

void gcd::thread_tmp_fu_116_p4() {
    tmp_fu_116_p4 = m_to_int_fu_112_p1.read().range(30, 23);
}

void gcd::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(or_cond_fu_192_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_17_fu_274_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_320_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void gcd::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m\" :  \"" << m.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

