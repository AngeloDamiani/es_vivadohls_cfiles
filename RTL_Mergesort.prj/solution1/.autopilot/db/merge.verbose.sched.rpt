

================================================================
== Vivado HLS Report for 'merge'
================================================================
* Date:           Wed Feb 28 22:51:45 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        RTL_mergesort.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.05|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    9|   59|    9|   59|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+-----+----------+-----------+-----------+--------+----------+
        |               |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        |   Loop Name   | min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +---------------+-----+-----+----------+-----------+-----------+--------+----------+
        |- MERGE_WHILE  |    2|   18|         2|          -|          -|  1 ~ 9 |    no    |
        |- MERGE_FOR1   |    0|   18|         2|          -|          -|  0 ~ 9 |    no    |
        |- MERGE_FOR2   |    0|   10|         2|          -|          -|  0 ~ 5 |    no    |
        |- MERGE_FOR3   |    4|   20|         2|          -|          -| 2 ~ 10 |    no    |
        +---------------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 8
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_1 & !tmp_3)
	4  / (tmp_1) | (tmp_3)
3 --> 
	2  / true
4 --> 
	5  / (!tmp_1 & !tmp_12)
	6  / (tmp_1 & !tmp_6)
	7  / (!tmp_1 & tmp_12) | (tmp_1 & tmp_6)
5 --> 
	4  / true
6 --> 
	4  / true
7 --> 
	8  / (!tmp_19)
8 --> 
	7  / true
* FSM state operations: 

 <State 1>: 3.91ns
ST_1: p_0 (6)  [1/1] 0.00ns
:0  %p_0 = alloca i8

ST_1: i2_1 (7)  [1/1] 0.00ns
:1  %i2_1 = alloca i8

ST_1: f2_read (8)  [1/1] 0.00ns
:2  %f2_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %f2)

ST_1: f1_read (9)  [1/1] 0.00ns
:3  %f1_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %f1)

ST_1: i1_read (10)  [1/1] 0.00ns
:4  %i1_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %i1)

ST_1: x (11)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:8
:5  %x = alloca [10 x i64], align 16

ST_1: tmp (12)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:9
:6  %tmp = trunc i64 %f1_read to i8

ST_1: i2 (13)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:9
:7  %i2 = add i8 1, %tmp

ST_1: StgValue_17 (14)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:9
:8  store i8 %i2, i8* %i2_1

ST_1: StgValue_18 (15)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:6
:9  store i8 %i1_read, i8* %p_0

ST_1: StgValue_19 (16)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:10  br label %1


 <State 2>: 3.73ns
ST_2: i (18)  [1/1] 0.00ns
:0  %i = phi i8 [ 0, %0 ], [ %i_1, %6 ]

ST_2: p_0_load (19)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:1  %p_0_load = load i8* %p_0

ST_2: i2_1_load (20)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:2  %i2_1_load = load i8* %i2_1

ST_2: tmp_s (21)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:3  %tmp_s = sext i8 %p_0_load to i64

ST_2: tmp_1 (22)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:4  %tmp_1 = icmp sgt i64 %tmp_s, %f1_read

ST_2: i_1 (23)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:5  %i_1 = add i8 %i, 1

ST_2: StgValue_26 (24)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:6  br i1 %tmp_1, label %.preheader.preheader, label %2

ST_2: tmp_2 (26)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:0  %tmp_2 = sext i8 %i2_1_load to i64

ST_2: tmp_3 (27)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:1  %tmp_3 = icmp sgt i64 %tmp_2, %f2_read

ST_2: StgValue_29 (28)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:13
:2  br i1 %tmp_3, label %.preheader3.preheader, label %3

ST_2: arr_addr_1 (33)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:3  %arr_addr_1 = getelementptr [10 x i64]* %arr, i64 0, i64 %tmp_s

ST_2: arr_load (34)  [2/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:4  %arr_load = load i64* %arr_addr_1, align 8

ST_2: arr_addr_2 (35)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:5  %arr_addr_2 = getelementptr [10 x i64]* %arr, i64 0, i64 %tmp_2

ST_2: arr_load_1 (36)  [2/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:6  %arr_load_1 = load i64* %arr_addr_2, align 8

ST_2: StgValue_34 (57)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
.preheader3.preheader:0  br label %.preheader3

ST_2: StgValue_35 (80)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
.preheader.preheader:0  br label %.preheader


 <State 3>: 6.05ns
ST_3: StgValue_36 (30)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:14
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind

ST_3: tmp_23 (31)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:14
:1  %tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str)

ST_3: StgValue_38 (32)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 9, i32 5, [1 x i8]* @p_str1) nounwind

ST_3: arr_load (34)  [1/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:4  %arr_load = load i64* %arr_addr_1, align 8

ST_3: arr_load_1 (36)  [1/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:6  %arr_load_1 = load i64* %arr_addr_2, align 8

ST_3: tmp_7 (37)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:7  %tmp_7 = icmp sgt i64 %arr_load, %arr_load_1

ST_3: StgValue_42 (38)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:15
:8  br i1 %tmp_7, label %5, label %4

ST_3: i1_assign (40)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:0  %i1_assign = add i8 %p_0_load, 1

ST_3: tmp_14 (41)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:1  %tmp_14 = sext i8 %i to i64

ST_3: x_addr_2 (42)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:2  %x_addr_2 = getelementptr inbounds [10 x i64]* %x, i64 0, i64 %tmp_14

ST_3: StgValue_46 (43)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:3  store i64 %arr_load, i64* %x_addr_2, align 8

ST_3: StgValue_47 (44)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:4  store i8 %i1_assign, i8* %p_0

ST_3: StgValue_48 (45)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:16
:5  br label %6

ST_3: i2_2 (47)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:0  %i2_2 = add i8 %i2_1_load, 1

ST_3: tmp_13 (48)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:1  %tmp_13 = sext i8 %i to i64

ST_3: x_addr_1 (49)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:2  %x_addr_1 = getelementptr inbounds [10 x i64]* %x, i64 0, i64 %tmp_13

ST_3: StgValue_52 (50)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:3  store i64 %arr_load_1, i64* %x_addr_1, align 8

ST_3: StgValue_53 (51)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:18
:4  store i8 %i2_2, i8* %i2_1

ST_3: StgValue_54 (52)  [1/1] 0.00ns
:5  br label %6

ST_3: empty (54)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:19
:0  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp_23)

ST_3: StgValue_56 (55)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:19
:1  br label %1


 <State 4>: 3.73ns
ST_4: tmp_10 (59)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
.preheader3:0  %tmp_10 = phi i8 [ %tmp_16, %7 ], [ %p_0_load, %.preheader3.preheader ]

ST_4: i_2 (60)  [1/1] 0.00ns
.preheader3:1  %i_2 = phi i8 [ %i_6, %7 ], [ %i, %.preheader3.preheader ]

ST_4: tmp_11 (61)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
.preheader3:2  %tmp_11 = sext i8 %tmp_10 to i64

ST_4: tmp_12 (62)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
.preheader3:3  %tmp_12 = icmp sgt i64 %tmp_11, %f1_read

ST_4: StgValue_61 (63)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
.preheader3:4  br i1 %tmp_12, label %.loopexit.loopexit13, label %7

ST_4: arr_addr_3 (68)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:3  %arr_addr_3 = getelementptr [10 x i64]* %arr, i64 0, i64 %tmp_11

ST_4: arr_load_3 (69)  [2/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:4  %arr_load_3 = load i64* %arr_addr_3, align 8

ST_4: tmp_16 (75)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
:10  %tmp_16 = add i8 %tmp_10, 1

ST_4: StgValue_65 (78)  [1/1] 0.00ns
.loopexit.loopexit13:0  br label %.loopexit

ST_4: tmp_4 (82)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
.preheader:0  %tmp_4 = phi i8 [ %tmp_9, %8 ], [ %i2_1_load, %.preheader.preheader ]

ST_4: i_3 (83)  [1/1] 0.00ns
.preheader:1  %i_3 = phi i8 [ %i_5, %8 ], [ %i, %.preheader.preheader ]

ST_4: tmp_5 (84)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
.preheader:2  %tmp_5 = sext i8 %tmp_4 to i64

ST_4: tmp_6 (85)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
.preheader:3  %tmp_6 = icmp sgt i64 %tmp_5, %f2_read

ST_4: StgValue_70 (86)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
.preheader:4  br i1 %tmp_6, label %.loopexit.loopexit, label %8

ST_4: arr_addr (91)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:3  %arr_addr = getelementptr [10 x i64]* %arr, i64 0, i64 %tmp_5

ST_4: arr_load_2 (92)  [2/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:4  %arr_load_2 = load i64* %arr_addr, align 8

ST_4: tmp_9 (98)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
:10  %tmp_9 = add i8 %tmp_4, 1

ST_4: StgValue_74 (101)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit

ST_4: StgValue_75 (103)  [1/1] 1.59ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
.loopexit:0  br label %9


 <State 5>: 4.64ns
ST_5: StgValue_76 (65)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str2) nounwind

ST_5: tmp_24 (66)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:1  %tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str2)

ST_5: StgValue_78 (67)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:26
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 9, i32 4, [1 x i8]* @p_str1) nounwind

ST_5: arr_load_3 (69)  [1/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:4  %arr_load_3 = load i64* %arr_addr_3, align 8

ST_5: i_6 (70)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:5  %i_6 = add i8 %i_2, 1

ST_5: tmp_15 (71)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:6  %tmp_15 = sext i8 %i_2 to i64

ST_5: x_addr_3 (72)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:7  %x_addr_3 = getelementptr inbounds [10 x i64]* %x, i64 0, i64 %tmp_15

ST_5: StgValue_83 (73)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:8  store i64 %arr_load_3, i64* %x_addr_3, align 8

ST_5: empty_4 (74)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:25
:9  %empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str2, i32 %tmp_24)

ST_5: StgValue_85 (76)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:24
:11  br label %.preheader3


 <State 6>: 4.64ns
ST_6: StgValue_86 (88)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str3) nounwind

ST_6: tmp_22 (89)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:1  %tmp_22 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str3)

ST_6: StgValue_88 (90)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:31
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 5, i32 2, [1 x i8]* @p_str1) nounwind

ST_6: arr_load_2 (92)  [1/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:4  %arr_load_2 = load i64* %arr_addr, align 8

ST_6: i_5 (93)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:5  %i_5 = add i8 %i_3, 1

ST_6: tmp_8 (94)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:6  %tmp_8 = sext i8 %i_3 to i64

ST_6: x_addr (95)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:7  %x_addr = getelementptr inbounds [10 x i64]* %x, i64 0, i64 %tmp_8

ST_6: StgValue_93 (96)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:8  store i64 %arr_load_2, i64* %x_addr, align 8

ST_6: empty_5 (97)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:30
:9  %empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str3, i32 %tmp_22)

ST_6: StgValue_95 (99)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:29
:11  br label %.preheader


 <State 7>: 3.73ns
ST_7: tmp_17 (105)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:0  %tmp_17 = phi i8 [ %i1_read, %.loopexit ], [ %tmp_21, %10 ]

ST_7: i_4 (106)  [1/1] 0.00ns
:1  %i_4 = phi i8 [ 0, %.loopexit ], [ %i_7, %10 ]

ST_7: tmp_18 (107)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:2  %tmp_18 = sext i8 %tmp_17 to i64

ST_7: tmp_19 (108)  [1/1] 3.73ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:3  %tmp_19 = icmp sgt i64 %tmp_18, %f2_read

ST_7: i_7 (109)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:4  %i_7 = add i8 %i_4, 1

ST_7: StgValue_101 (110)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:5  br i1 %tmp_19, label %11, label %10

ST_7: tmp_20 (115)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:3  %tmp_20 = sext i8 %i_4 to i64

ST_7: x_addr_4 (116)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:4  %x_addr_4 = getelementptr inbounds [10 x i64]* %x, i64 0, i64 %tmp_20

ST_7: x_load (117)  [2/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:5  %x_load = load i64* %x_addr_4, align 8

ST_7: tmp_21 (121)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:9  %tmp_21 = add i8 %tmp_17, 1

ST_7: StgValue_106 (124)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:0  store i8 %tmp_17, i8* @h, align 1

ST_7: StgValue_107 (125)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:36
:1  ret void


 <State 8>: 4.64ns
ST_8: StgValue_108 (112)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:0  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str4) nounwind

ST_8: tmp_25 (113)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:1  %tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4)

ST_8: StgValue_110 (114)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:36
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 2, i32 10, i32 5, [1 x i8]* @p_str1) nounwind

ST_8: x_load (117)  [1/2] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:5  %x_load = load i64* %x_addr_4, align 8

ST_8: arr_addr_4 (118)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:6  %arr_addr_4 = getelementptr [10 x i64]* %arr, i64 0, i64 %tmp_18

ST_8: StgValue_113 (119)  [1/1] 2.32ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:7  store i64 %x_load, i64* %arr_addr_4, align 8

ST_8: empty_6 (120)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:35
:8  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_25)

ST_8: StgValue_115 (122)  [1/1] 0.00ns  loc: RTL_mergesort.prj/solution1/mergesort.c:34
:10  br label %9



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.91ns
The critical path consists of the following:
	wire read on port 'f1' [9]  (0 ns)
	'add' operation ('i2', RTL_mergesort.prj/solution1/mergesort.c:9) [13]  (2.32 ns)
	'store' operation (RTL_mergesort.prj/solution1/mergesort.c:9) of variable 'i2', RTL_mergesort.prj/solution1/mergesort.c:9 on local variable 'i2' [14]  (1.59 ns)

 <State 2>: 3.73ns
The critical path consists of the following:
	'load' operation ('p_0_load', RTL_mergesort.prj/solution1/mergesort.c:16) on local variable 'i1' [19]  (0 ns)
	'icmp' operation ('tmp_1', RTL_mergesort.prj/solution1/mergesort.c:13) [22]  (3.73 ns)

 <State 3>: 6.05ns
The critical path consists of the following:
	'load' operation ('arr_load', RTL_mergesort.prj/solution1/mergesort.c:15) on array 'arr' [34]  (2.32 ns)
	'icmp' operation ('tmp_7', RTL_mergesort.prj/solution1/mergesort.c:15) [37]  (3.73 ns)

 <State 4>: 3.73ns
The critical path consists of the following:
	'phi' operation ('tmp_10', RTL_mergesort.prj/solution1/mergesort.c:24) with incoming values : ('p_0_load', RTL_mergesort.prj/solution1/mergesort.c:16) ('tmp_16', RTL_mergesort.prj/solution1/mergesort.c:24) [59]  (0 ns)
	'icmp' operation ('tmp_12', RTL_mergesort.prj/solution1/mergesort.c:24) [62]  (3.73 ns)

 <State 5>: 4.64ns
The critical path consists of the following:
	'load' operation ('arr_load_3', RTL_mergesort.prj/solution1/mergesort.c:25) on array 'arr' [69]  (2.32 ns)
	'store' operation (RTL_mergesort.prj/solution1/mergesort.c:25) of variable 'arr_load_3', RTL_mergesort.prj/solution1/mergesort.c:25 on array 'x', RTL_mergesort.prj/solution1/mergesort.c:8 [73]  (2.32 ns)

 <State 6>: 4.64ns
The critical path consists of the following:
	'load' operation ('arr_load_2', RTL_mergesort.prj/solution1/mergesort.c:30) on array 'arr' [92]  (2.32 ns)
	'store' operation (RTL_mergesort.prj/solution1/mergesort.c:30) of variable 'arr_load_2', RTL_mergesort.prj/solution1/mergesort.c:30 on array 'x', RTL_mergesort.prj/solution1/mergesort.c:8 [96]  (2.32 ns)

 <State 7>: 3.73ns
The critical path consists of the following:
	'phi' operation ('tmp_17', RTL_mergesort.prj/solution1/mergesort.c:34) with incoming values : ('i1') ('tmp_21', RTL_mergesort.prj/solution1/mergesort.c:34) [105]  (0 ns)
	'icmp' operation ('tmp_19', RTL_mergesort.prj/solution1/mergesort.c:34) [108]  (3.73 ns)

 <State 8>: 4.64ns
The critical path consists of the following:
	'load' operation ('x_load', RTL_mergesort.prj/solution1/mergesort.c:35) on array 'x', RTL_mergesort.prj/solution1/mergesort.c:8 [117]  (2.32 ns)
	'store' operation (RTL_mergesort.prj/solution1/mergesort.c:35) of variable 'x_load', RTL_mergesort.prj/solution1/mergesort.c:35 on array 'arr' [119]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
