// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "merge.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic merge::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic merge::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> merge::ap_ST_fsm_state1 = "1";
const sc_lv<8> merge::ap_ST_fsm_state2 = "10";
const sc_lv<8> merge::ap_ST_fsm_state3 = "100";
const sc_lv<8> merge::ap_ST_fsm_state4 = "1000";
const sc_lv<8> merge::ap_ST_fsm_state5 = "10000";
const sc_lv<8> merge::ap_ST_fsm_state6 = "100000";
const sc_lv<8> merge::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> merge::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> merge::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> merge::ap_const_lv32_1 = "1";
const sc_lv<1> merge::ap_const_lv1_0 = "0";
const sc_lv<32> merge::ap_const_lv32_3 = "11";
const sc_lv<1> merge::ap_const_lv1_1 = "1";
const sc_lv<32> merge::ap_const_lv32_4 = "100";
const sc_lv<32> merge::ap_const_lv32_5 = "101";
const sc_lv<32> merge::ap_const_lv32_6 = "110";
const sc_lv<8> merge::ap_const_lv8_0 = "00000000";
const sc_lv<32> merge::ap_const_lv32_2 = "10";
const sc_lv<32> merge::ap_const_lv32_7 = "111";
const sc_lv<8> merge::ap_const_lv8_1 = "1";
const bool merge::ap_const_boolean_1 = true;

merge::merge(sc_module_name name) : sc_module(name), mVcdFile(0) {
    x_U = new merge_x("x_U");
    x_U->clk(ap_clk);
    x_U->reset(ap_rst);
    x_U->address0(x_address0);
    x_U->ce0(x_ce0);
    x_U->we0(x_we0);
    x_U->d0(x_d0);
    x_U->q0(x_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_19_fu_391_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_19_fu_391_p2 );

    SC_METHOD(thread_arr_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_reg_463 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_12_fu_338_p2 );
    sensitive << ( tmp_6_fu_354_p2 );
    sensitive << ( tmp_s_fu_271_p1 );
    sensitive << ( tmp_11_fu_333_p1 );
    sensitive << ( tmp_5_fu_349_p1 );

    SC_METHOD(thread_arr_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_18_reg_524 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_2_fu_287_p1 );

    SC_METHOD(thread_arr_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_reg_463 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_12_fu_338_p2 );
    sensitive << ( tmp_6_fu_354_p2 );

    SC_METHOD(thread_arr_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_arr_d1);
    sensitive << ( x_q0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_arr_we1);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i1_assign_fu_303_p2);
    sensitive << ( p_0_load_reg_451 );

    SC_METHOD(thread_i2_2_fu_318_p2);
    sensitive << ( i2_1_load_reg_457 );

    SC_METHOD(thread_i2_fu_249_p2);
    sensitive << ( tmp_fu_245_p1 );

    SC_METHOD(thread_i_1_fu_281_p2);
    sensitive << ( i_reg_173 );

    SC_METHOD(thread_i_5_fu_376_p2);
    sensitive << ( i_3_reg_214 );

    SC_METHOD(thread_i_6_fu_365_p2);
    sensitive << ( i_2_reg_194 );

    SC_METHOD(thread_i_7_fu_396_p2);
    sensitive << ( i_4_reg_234 );

    SC_METHOD(thread_tmp_11_fu_333_p1);
    sensitive << ( tmp_10_reg_185 );

    SC_METHOD(thread_tmp_12_fu_338_p2);
    sensitive << ( f1 );
    sensitive << ( tmp_1_reg_463 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_11_fu_333_p1 );

    SC_METHOD(thread_tmp_13_fu_323_p1);
    sensitive << ( i_reg_173 );

    SC_METHOD(thread_tmp_14_fu_308_p1);
    sensitive << ( i_reg_173 );

    SC_METHOD(thread_tmp_15_fu_371_p1);
    sensitive << ( i_2_reg_194 );

    SC_METHOD(thread_tmp_16_fu_343_p2);
    sensitive << ( tmp_10_reg_185 );

    SC_METHOD(thread_tmp_18_fu_387_p1);
    sensitive << ( tmp_17_reg_225 );

    SC_METHOD(thread_tmp_19_fu_391_p2);
    sensitive << ( f2 );
    sensitive << ( tmp_18_fu_387_p1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_fu_276_p2);
    sensitive << ( f1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_271_p1 );

    SC_METHOD(thread_tmp_20_fu_402_p1);
    sensitive << ( i_4_reg_234 );

    SC_METHOD(thread_tmp_21_fu_407_p2);
    sensitive << ( tmp_17_reg_225 );

    SC_METHOD(thread_tmp_2_fu_287_p1);
    sensitive << ( i2_1_fu_58 );

    SC_METHOD(thread_tmp_3_fu_292_p2);
    sensitive << ( f2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_276_p2 );
    sensitive << ( tmp_2_fu_287_p1 );

    SC_METHOD(thread_tmp_5_fu_349_p1);
    sensitive << ( tmp_4_reg_205 );

    SC_METHOD(thread_tmp_6_fu_354_p2);
    sensitive << ( f2 );
    sensitive << ( tmp_1_reg_463 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_fu_349_p1 );

    SC_METHOD(thread_tmp_7_fu_297_p2);
    sensitive << ( arr_q0 );
    sensitive << ( arr_q1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_8_fu_382_p1);
    sensitive << ( i_3_reg_214 );

    SC_METHOD(thread_tmp_9_fu_359_p2);
    sensitive << ( tmp_4_reg_205 );

    SC_METHOD(thread_tmp_fu_245_p1);
    sensitive << ( f1 );

    SC_METHOD(thread_tmp_s_fu_271_p1);
    sensitive << ( p_0_fu_54 );

    SC_METHOD(thread_x_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_14_fu_308_p1 );
    sensitive << ( tmp_7_fu_297_p2 );
    sensitive << ( tmp_13_fu_323_p1 );
    sensitive << ( tmp_15_fu_371_p1 );
    sensitive << ( tmp_8_fu_382_p1 );
    sensitive << ( tmp_20_fu_402_p1 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_fu_297_p2 );

    SC_METHOD(thread_x_d0);
    sensitive << ( arr_q0 );
    sensitive << ( arr_q1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_fu_297_p2 );

    SC_METHOD(thread_x_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_7_fu_297_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_276_p2 );
    sensitive << ( tmp_1_reg_463 );
    sensitive << ( tmp_3_fu_292_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_12_fu_338_p2 );
    sensitive << ( tmp_6_fu_354_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_19_fu_391_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "merge_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, i1, "(port)i1");
    sc_trace(mVcdFile, f1, "(port)f1");
    sc_trace(mVcdFile, f2, "(port)f2");
    sc_trace(mVcdFile, arr_address0, "(port)arr_address0");
    sc_trace(mVcdFile, arr_ce0, "(port)arr_ce0");
    sc_trace(mVcdFile, arr_q0, "(port)arr_q0");
    sc_trace(mVcdFile, arr_address1, "(port)arr_address1");
    sc_trace(mVcdFile, arr_ce1, "(port)arr_ce1");
    sc_trace(mVcdFile, arr_we1, "(port)arr_we1");
    sc_trace(mVcdFile, arr_d1, "(port)arr_d1");
    sc_trace(mVcdFile, arr_q1, "(port)arr_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_0_load_reg_451, "p_0_load_reg_451");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i2_1_load_reg_457, "i2_1_load_reg_457");
    sc_trace(mVcdFile, tmp_1_fu_276_p2, "tmp_1_fu_276_p2");
    sc_trace(mVcdFile, tmp_1_reg_463, "tmp_1_reg_463");
    sc_trace(mVcdFile, i_1_fu_281_p2, "i_1_fu_281_p2");
    sc_trace(mVcdFile, i_1_reg_467, "i_1_reg_467");
    sc_trace(mVcdFile, tmp_3_fu_292_p2, "tmp_3_fu_292_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_12_fu_338_p2, "tmp_12_fu_338_p2");
    sc_trace(mVcdFile, tmp_16_fu_343_p2, "tmp_16_fu_343_p2");
    sc_trace(mVcdFile, tmp_16_reg_496, "tmp_16_reg_496");
    sc_trace(mVcdFile, tmp_6_fu_354_p2, "tmp_6_fu_354_p2");
    sc_trace(mVcdFile, tmp_9_fu_359_p2, "tmp_9_fu_359_p2");
    sc_trace(mVcdFile, tmp_9_reg_509, "tmp_9_reg_509");
    sc_trace(mVcdFile, i_6_fu_365_p2, "i_6_fu_365_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_5_fu_376_p2, "i_5_fu_376_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_18_fu_387_p1, "tmp_18_fu_387_p1");
    sc_trace(mVcdFile, tmp_18_reg_524, "tmp_18_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_7_fu_396_p2, "i_7_fu_396_p2");
    sc_trace(mVcdFile, i_7_reg_532, "i_7_reg_532");
    sc_trace(mVcdFile, tmp_19_fu_391_p2, "tmp_19_fu_391_p2");
    sc_trace(mVcdFile, tmp_21_fu_407_p2, "tmp_21_fu_407_p2");
    sc_trace(mVcdFile, tmp_21_reg_542, "tmp_21_reg_542");
    sc_trace(mVcdFile, x_address0, "x_address0");
    sc_trace(mVcdFile, x_ce0, "x_ce0");
    sc_trace(mVcdFile, x_we0, "x_we0");
    sc_trace(mVcdFile, x_d0, "x_d0");
    sc_trace(mVcdFile, x_q0, "x_q0");
    sc_trace(mVcdFile, i_reg_173, "i_reg_173");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_10_reg_185, "tmp_10_reg_185");
    sc_trace(mVcdFile, i_2_reg_194, "i_2_reg_194");
    sc_trace(mVcdFile, tmp_4_reg_205, "tmp_4_reg_205");
    sc_trace(mVcdFile, i_3_reg_214, "i_3_reg_214");
    sc_trace(mVcdFile, tmp_17_reg_225, "tmp_17_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_4_reg_234, "i_4_reg_234");
    sc_trace(mVcdFile, tmp_s_fu_271_p1, "tmp_s_fu_271_p1");
    sc_trace(mVcdFile, tmp_2_fu_287_p1, "tmp_2_fu_287_p1");
    sc_trace(mVcdFile, tmp_14_fu_308_p1, "tmp_14_fu_308_p1");
    sc_trace(mVcdFile, tmp_7_fu_297_p2, "tmp_7_fu_297_p2");
    sc_trace(mVcdFile, tmp_13_fu_323_p1, "tmp_13_fu_323_p1");
    sc_trace(mVcdFile, tmp_11_fu_333_p1, "tmp_11_fu_333_p1");
    sc_trace(mVcdFile, tmp_5_fu_349_p1, "tmp_5_fu_349_p1");
    sc_trace(mVcdFile, tmp_15_fu_371_p1, "tmp_15_fu_371_p1");
    sc_trace(mVcdFile, tmp_8_fu_382_p1, "tmp_8_fu_382_p1");
    sc_trace(mVcdFile, tmp_20_fu_402_p1, "tmp_20_fu_402_p1");
    sc_trace(mVcdFile, p_0_fu_54, "p_0_fu_54");
    sc_trace(mVcdFile, i1_assign_fu_303_p2, "i1_assign_fu_303_p2");
    sc_trace(mVcdFile, i2_1_fu_58, "i2_1_fu_58");
    sc_trace(mVcdFile, i2_fu_249_p2, "i2_fu_249_p2");
    sc_trace(mVcdFile, i2_2_fu_318_p2, "i2_2_fu_318_p2");
    sc_trace(mVcdFile, tmp_fu_245_p1, "tmp_fu_245_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

merge::~merge() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete x_U;
}

void merge::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_297_p2.read()))) {
        i2_1_fu_58 = i2_2_fu_318_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i2_1_fu_58 = i2_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_276_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_3_fu_292_p2.read(), ap_const_lv1_1))) {
        i_2_reg_194 = i_reg_173.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_2_reg_194 = i_6_fu_365_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_276_p2.read(), ap_const_lv1_1))) {
        i_3_reg_214 = i_reg_173.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_3_reg_214 = i_5_fu_376_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_4_reg_234 = i_7_reg_532.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_12_fu_338_p2.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_354_p2.read()))))) {
        i_4_reg_234 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_173 = i_1_reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_173 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_297_p2.read()))) {
        p_0_fu_54 = i1_assign_fu_303_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_fu_54 = i1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_276_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_3_fu_292_p2.read(), ap_const_lv1_1))) {
        tmp_10_reg_185 = p_0_fu_54.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_10_reg_185 = tmp_16_reg_496.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_17_reg_225 = tmp_21_reg_542.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                ((esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(tmp_12_fu_338_p2.read(), ap_const_lv1_1)) || 
                 (esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_354_p2.read()))))) {
        tmp_17_reg_225 = i1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_1_fu_276_p2.read(), ap_const_lv1_1))) {
        tmp_4_reg_205 = i2_1_fu_58.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_4_reg_205 = tmp_9_reg_509.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i2_1_load_reg_457 = i2_1_fu_58.read();
        i_1_reg_467 = i_1_fu_281_p2.read();
        p_0_load_reg_451 = p_0_fu_54.read();
        tmp_1_reg_463 = tmp_1_fu_276_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_7_reg_532 = i_7_fu_396_p2.read();
        tmp_18_reg_524 = tmp_18_fu_387_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_338_p2.read()))) {
        tmp_16_reg_496 = tmp_16_fu_343_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_19_fu_391_p2.read()))) {
        tmp_21_reg_542 = tmp_21_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_354_p2.read()))) {
        tmp_9_reg_509 = tmp_9_fu_359_p2.read();
    }
}

void merge::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void merge::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void merge::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void merge::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void merge::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void merge::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void merge::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void merge::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void merge::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_391_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void merge::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void merge::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_391_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void merge::thread_arr_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_354_p2.read()))) {
        arr_address0 =  (sc_lv<4>) (tmp_5_fu_349_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_338_p2.read()))) {
        arr_address0 =  (sc_lv<4>) (tmp_11_fu_333_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        arr_address0 =  (sc_lv<4>) (tmp_s_fu_271_p1.read());
    } else {
        arr_address0 = "XXXX";
    }
}

void merge::thread_arr_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr_address1 =  (sc_lv<4>) (tmp_18_reg_524.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        arr_address1 =  (sc_lv<4>) (tmp_2_fu_287_p1.read());
    } else {
        arr_address1 = "XXXX";
    }
}

void merge::thread_arr_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_338_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_354_p2.read())))) {
        arr_ce0 = ap_const_logic_1;
    } else {
        arr_ce0 = ap_const_logic_0;
    }
}

void merge::thread_arr_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        arr_ce1 = ap_const_logic_1;
    } else {
        arr_ce1 = ap_const_logic_0;
    }
}

void merge::thread_arr_d1() {
    arr_d1 = x_q0.read();
}

void merge::thread_arr_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr_we1 = ap_const_logic_1;
    } else {
        arr_we1 = ap_const_logic_0;
    }
}

void merge::thread_i1_assign_fu_303_p2() {
    i1_assign_fu_303_p2 = (!p_0_load_reg_451.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(p_0_load_reg_451.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_i2_2_fu_318_p2() {
    i2_2_fu_318_p2 = (!i2_1_load_reg_457.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i2_1_load_reg_457.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_i2_fu_249_p2() {
    i2_fu_249_p2 = (!ap_const_lv8_1.is_01() || !tmp_fu_245_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(tmp_fu_245_p1.read()));
}

void merge::thread_i_1_fu_281_p2() {
    i_1_fu_281_p2 = (!i_reg_173.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_173.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_i_5_fu_376_p2() {
    i_5_fu_376_p2 = (!i_3_reg_214.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_3_reg_214.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_i_6_fu_365_p2() {
    i_6_fu_365_p2 = (!i_2_reg_194.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_194.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_i_7_fu_396_p2() {
    i_7_fu_396_p2 = (!i_4_reg_234.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_4_reg_234.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_tmp_11_fu_333_p1() {
    tmp_11_fu_333_p1 = esl_sext<64,8>(tmp_10_reg_185.read());
}

void merge::thread_tmp_12_fu_338_p2() {
    tmp_12_fu_338_p2 = (!tmp_11_fu_333_p1.read().is_01() || !f1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_11_fu_333_p1.read()) > sc_bigint<64>(f1.read()));
}

void merge::thread_tmp_13_fu_323_p1() {
    tmp_13_fu_323_p1 = esl_sext<64,8>(i_reg_173.read());
}

void merge::thread_tmp_14_fu_308_p1() {
    tmp_14_fu_308_p1 = esl_sext<64,8>(i_reg_173.read());
}

void merge::thread_tmp_15_fu_371_p1() {
    tmp_15_fu_371_p1 = esl_sext<64,8>(i_2_reg_194.read());
}

void merge::thread_tmp_16_fu_343_p2() {
    tmp_16_fu_343_p2 = (!tmp_10_reg_185.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_10_reg_185.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_tmp_18_fu_387_p1() {
    tmp_18_fu_387_p1 = esl_sext<64,8>(tmp_17_reg_225.read());
}

void merge::thread_tmp_19_fu_391_p2() {
    tmp_19_fu_391_p2 = (!tmp_18_fu_387_p1.read().is_01() || !f2.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_18_fu_387_p1.read()) > sc_bigint<64>(f2.read()));
}

void merge::thread_tmp_1_fu_276_p2() {
    tmp_1_fu_276_p2 = (!tmp_s_fu_271_p1.read().is_01() || !f1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_s_fu_271_p1.read()) > sc_bigint<64>(f1.read()));
}

void merge::thread_tmp_20_fu_402_p1() {
    tmp_20_fu_402_p1 = esl_sext<64,8>(i_4_reg_234.read());
}

void merge::thread_tmp_21_fu_407_p2() {
    tmp_21_fu_407_p2 = (!tmp_17_reg_225.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_17_reg_225.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_tmp_2_fu_287_p1() {
    tmp_2_fu_287_p1 = esl_sext<64,8>(i2_1_fu_58.read());
}

void merge::thread_tmp_3_fu_292_p2() {
    tmp_3_fu_292_p2 = (!tmp_2_fu_287_p1.read().is_01() || !f2.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_2_fu_287_p1.read()) > sc_bigint<64>(f2.read()));
}

void merge::thread_tmp_5_fu_349_p1() {
    tmp_5_fu_349_p1 = esl_sext<64,8>(tmp_4_reg_205.read());
}

void merge::thread_tmp_6_fu_354_p2() {
    tmp_6_fu_354_p2 = (!tmp_5_fu_349_p1.read().is_01() || !f2.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_5_fu_349_p1.read()) > sc_bigint<64>(f2.read()));
}

void merge::thread_tmp_7_fu_297_p2() {
    tmp_7_fu_297_p2 = (!arr_q0.read().is_01() || !arr_q1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(arr_q0.read()) > sc_bigint<64>(arr_q1.read()));
}

void merge::thread_tmp_8_fu_382_p1() {
    tmp_8_fu_382_p1 = esl_sext<64,8>(i_3_reg_214.read());
}

void merge::thread_tmp_9_fu_359_p2() {
    tmp_9_fu_359_p2 = (!tmp_4_reg_205.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_4_reg_205.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_tmp_fu_245_p1() {
    tmp_fu_245_p1 = f1.read().range(8-1, 0);
}

void merge::thread_tmp_s_fu_271_p1() {
    tmp_s_fu_271_p1 = esl_sext<64,8>(p_0_fu_54.read());
}

void merge::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_address0 =  (sc_lv<4>) (tmp_20_fu_402_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        x_address0 =  (sc_lv<4>) (tmp_8_fu_382_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_address0 =  (sc_lv<4>) (tmp_15_fu_371_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_297_p2.read()))) {
        x_address0 =  (sc_lv<4>) (tmp_13_fu_323_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_297_p2.read()))) {
        x_address0 =  (sc_lv<4>) (tmp_14_fu_308_p1.read());
    } else {
        x_address0 = "XXXX";
    }
}

void merge::thread_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_297_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_297_p2.read())))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void merge::thread_x_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_297_p2.read()))) {
        x_d0 = arr_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_297_p2.read())))) {
        x_d0 = arr_q0.read();
    } else {
        x_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void merge::thread_x_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_297_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_297_p2.read())))) {
        x_we0 = ap_const_logic_1;
    } else {
        x_we0 = ap_const_logic_0;
    }
}

void merge::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && (esl_seteq<1,1,1>(tmp_3_fu_292_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_1_fu_276_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_12_fu_338_p2.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_354_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_1_reg_463.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_354_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_19_fu_391_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

