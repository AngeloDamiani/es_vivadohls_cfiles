// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "floyd_warshall.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic floyd_warshall::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic floyd_warshall::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> floyd_warshall::ap_ST_fsm_state1 = "1";
const sc_lv<4> floyd_warshall::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> floyd_warshall::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> floyd_warshall::ap_ST_fsm_state6 = "1000";
const sc_lv<32> floyd_warshall::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool floyd_warshall::ap_const_boolean_1 = true;
const sc_lv<32> floyd_warshall::ap_const_lv32_1 = "1";
const bool floyd_warshall::ap_const_boolean_0 = false;
const sc_lv<1> floyd_warshall::ap_const_lv1_0 = "0";
const sc_lv<32> floyd_warshall::ap_const_lv32_2 = "10";
const sc_lv<1> floyd_warshall::ap_const_lv1_1 = "1";
const sc_lv<10> floyd_warshall::ap_const_lv10_0 = "0000000000";
const sc_lv<4> floyd_warshall::ap_const_lv4_0 = "0000";
const sc_lv<8> floyd_warshall::ap_const_lv8_0 = "00000000";
const sc_lv<10> floyd_warshall::ap_const_lv10_3E8 = "1111101000";
const sc_lv<10> floyd_warshall::ap_const_lv10_1 = "1";
const sc_lv<4> floyd_warshall::ap_const_lv4_1 = "1";
const sc_lv<8> floyd_warshall::ap_const_lv8_64 = "1100100";
const sc_lv<4> floyd_warshall::ap_const_lv4_A = "1010";
const sc_lv<8> floyd_warshall::ap_const_lv8_1 = "1";
const sc_lv<3> floyd_warshall::ap_const_lv3_0 = "000";
const sc_lv<32> floyd_warshall::ap_const_lv32_3 = "11";

floyd_warshall::floyd_warshall(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( tmp_13_cast_fu_284_p1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_12_cast_fu_331_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( A_addr_2_reg_424 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_14_cast_fu_341_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_A_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_flag00000000 );
    sensitive << ( tmp_8_fu_346_p2 );

    SC_METHOD(thread_A_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_9_fu_352_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten1_fu_150_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_exitcond_flatten1_fu_150_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten1_phi_fu_99_p4 );

    SC_METHOD(thread_exitcond_flatten9_fu_168_p2);
    sensitive << ( exitcond_flatten1_fu_150_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_phi_fu_121_p4 );

    SC_METHOD(thread_h_1_fu_162_p2);
    sensitive << ( h_phi_fu_110_p4 );

    SC_METHOD(thread_h_phi_fu_110_p4);
    sensitive << ( h_reg_106 );
    sensitive << ( exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_1_mid2_v_reg_373 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_i_1_fu_264_p2);
    sensitive << ( i_mid_reg_367 );

    SC_METHOD(thread_i_mid_fu_174_p3);
    sensitive << ( i_phi_fu_132_p4 );
    sensitive << ( exitcond_flatten9_fu_168_p2 );

    SC_METHOD(thread_i_phi_fu_132_p4);
    sensitive << ( i_reg_128 );
    sensitive << ( exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_4_mid2_reg_397 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_indvar_flatten1_phi_fu_99_p4);
    sensitive << ( indvar_flatten1_reg_95 );
    sensitive << ( exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next1_reg_362 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_indvar_flatten_next1_fu_156_p2);
    sensitive << ( indvar_flatten1_phi_fu_99_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_228_p3);
    sensitive << ( exitcond_flatten9_fu_168_p2 );
    sensitive << ( indvar_flatten_op_fu_222_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_222_p2);
    sensitive << ( indvar_flatten_phi_fu_121_p4 );

    SC_METHOD(thread_indvar_flatten_phi_fu_121_p4);
    sensitive << ( indvar_flatten_reg_117 );
    sensitive << ( exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_392 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_j_1_fu_289_p2);
    sensitive << ( j_mid2_reg_386 );

    SC_METHOD(thread_j_mid2_fu_214_p3);
    sensitive << ( j_phi_fu_143_p4 );
    sensitive << ( tmp_3_fu_208_p2 );

    SC_METHOD(thread_j_phi_fu_143_p4);
    sensitive << ( j_reg_139 );
    sensitive << ( exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_1_reg_414 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_not_exitcond_flatten_fu_190_p2);
    sensitive << ( exitcond_flatten9_fu_168_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_315_p1);
    sensitive << ( tmp_6_fu_308_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_243_p1);
    sensitive << ( tmp_fu_236_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_254_p1);
    sensitive << ( tmp_1_fu_247_p3 );

    SC_METHOD(thread_p_shl_cast_fu_304_p1);
    sensitive << ( tmp_5_fu_297_p3 );

    SC_METHOD(thread_tmp_10_fu_325_p2);
    sensitive << ( tmp_1_mid2_cast_fu_294_p1 );
    sensitive << ( tmp_7_fu_319_p2 );

    SC_METHOD(thread_tmp_11_fu_278_p2);
    sensitive << ( tmp_7_cast_fu_275_p1 );
    sensitive << ( tmp_2_fu_258_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_331_p1);
    sensitive << ( tmp_10_fu_325_p2 );

    SC_METHOD(thread_tmp_12_fu_336_p2);
    sensitive << ( tmp_7_cast_reg_404 );
    sensitive << ( tmp_7_fu_319_p2 );

    SC_METHOD(thread_tmp_13_cast_fu_284_p1);
    sensitive << ( tmp_11_fu_278_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_341_p1);
    sensitive << ( tmp_12_fu_336_p2 );

    SC_METHOD(thread_tmp_1_fu_247_p3);
    sensitive << ( tmp_1_mid2_v_reg_373 );

    SC_METHOD(thread_tmp_1_mid2_cast_fu_294_p1);
    sensitive << ( tmp_1_mid2_v_reg_373 );

    SC_METHOD(thread_tmp_1_mid2_v_fu_182_p3);
    sensitive << ( h_phi_fu_110_p4 );
    sensitive << ( exitcond_flatten9_fu_168_p2 );
    sensitive << ( h_1_fu_162_p2 );

    SC_METHOD(thread_tmp_2_fu_258_p2);
    sensitive << ( p_shl2_cast_fu_243_p1 );
    sensitive << ( p_shl3_cast_fu_254_p1 );

    SC_METHOD(thread_tmp_3_fu_208_p2);
    sensitive << ( tmp_5_mid_fu_202_p2 );
    sensitive << ( exitcond_flatten9_fu_168_p2 );

    SC_METHOD(thread_tmp_4_fu_196_p2);
    sensitive << ( exitcond_flatten1_fu_150_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_phi_fu_143_p4 );

    SC_METHOD(thread_tmp_4_mid2_fu_269_p3);
    sensitive << ( i_mid_reg_367 );
    sensitive << ( tmp_5_mid_reg_381 );
    sensitive << ( i_1_fu_264_p2 );

    SC_METHOD(thread_tmp_5_fu_297_p3);
    sensitive << ( tmp_4_mid2_reg_397 );

    SC_METHOD(thread_tmp_5_mid_fu_202_p2);
    sensitive << ( tmp_4_fu_196_p2 );
    sensitive << ( not_exitcond_flatten_fu_190_p2 );

    SC_METHOD(thread_tmp_6_fu_308_p3);
    sensitive << ( tmp_4_mid2_reg_397 );

    SC_METHOD(thread_tmp_7_cast_fu_275_p1);
    sensitive << ( j_mid2_reg_386 );

    SC_METHOD(thread_tmp_7_fu_319_p2);
    sensitive << ( p_shl_cast_fu_304_p1 );
    sensitive << ( p_shl1_cast_fu_315_p1 );

    SC_METHOD(thread_tmp_8_fu_346_p2);
    sensitive << ( A_q0 );
    sensitive << ( A_load_1_reg_429 );

    SC_METHOD(thread_tmp_9_fu_352_p2);
    sensitive << ( A_q1 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_flatten1_reg_358 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_8_fu_346_p2 );

    SC_METHOD(thread_tmp_fu_236_p3);
    sensitive << ( tmp_1_mid2_v_reg_373 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten1_fu_150_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "floyd_warshall_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten1_reg_95, "indvar_flatten1_reg_95");
    sc_trace(mVcdFile, h_reg_106, "h_reg_106");
    sc_trace(mVcdFile, indvar_flatten_reg_117, "indvar_flatten_reg_117");
    sc_trace(mVcdFile, i_reg_128, "i_reg_128");
    sc_trace(mVcdFile, j_reg_139, "j_reg_139");
    sc_trace(mVcdFile, exitcond_flatten1_fu_150_p2, "exitcond_flatten1_fu_150_p2");
    sc_trace(mVcdFile, exitcond_flatten1_reg_358, "exitcond_flatten1_reg_358");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten1_reg_358, "ap_reg_pp0_iter1_exitcond_flatten1_reg_358");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_156_p2, "indvar_flatten_next1_fu_156_p2");
    sc_trace(mVcdFile, indvar_flatten_next1_reg_362, "indvar_flatten_next1_reg_362");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, i_mid_fu_174_p3, "i_mid_fu_174_p3");
    sc_trace(mVcdFile, i_mid_reg_367, "i_mid_reg_367");
    sc_trace(mVcdFile, tmp_1_mid2_v_fu_182_p3, "tmp_1_mid2_v_fu_182_p3");
    sc_trace(mVcdFile, tmp_1_mid2_v_reg_373, "tmp_1_mid2_v_reg_373");
    sc_trace(mVcdFile, tmp_5_mid_fu_202_p2, "tmp_5_mid_fu_202_p2");
    sc_trace(mVcdFile, tmp_5_mid_reg_381, "tmp_5_mid_reg_381");
    sc_trace(mVcdFile, j_mid2_fu_214_p3, "j_mid2_fu_214_p3");
    sc_trace(mVcdFile, j_mid2_reg_386, "j_mid2_reg_386");
    sc_trace(mVcdFile, indvar_flatten_next_fu_228_p3, "indvar_flatten_next_fu_228_p3");
    sc_trace(mVcdFile, indvar_flatten_next_reg_392, "indvar_flatten_next_reg_392");
    sc_trace(mVcdFile, tmp_4_mid2_fu_269_p3, "tmp_4_mid2_fu_269_p3");
    sc_trace(mVcdFile, tmp_4_mid2_reg_397, "tmp_4_mid2_reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, tmp_7_cast_fu_275_p1, "tmp_7_cast_fu_275_p1");
    sc_trace(mVcdFile, tmp_7_cast_reg_404, "tmp_7_cast_reg_404");
    sc_trace(mVcdFile, j_1_fu_289_p2, "j_1_fu_289_p2");
    sc_trace(mVcdFile, j_1_reg_414, "j_1_reg_414");
    sc_trace(mVcdFile, A_addr_2_reg_424, "A_addr_2_reg_424");
    sc_trace(mVcdFile, A_load_1_reg_429, "A_load_1_reg_429");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, indvar_flatten1_phi_fu_99_p4, "indvar_flatten1_phi_fu_99_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, h_phi_fu_110_p4, "h_phi_fu_110_p4");
    sc_trace(mVcdFile, indvar_flatten_phi_fu_121_p4, "indvar_flatten_phi_fu_121_p4");
    sc_trace(mVcdFile, i_phi_fu_132_p4, "i_phi_fu_132_p4");
    sc_trace(mVcdFile, j_phi_fu_143_p4, "j_phi_fu_143_p4");
    sc_trace(mVcdFile, tmp_13_cast_fu_284_p1, "tmp_13_cast_fu_284_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00000000, "ap_block_pp0_stage1_flag00000000");
    sc_trace(mVcdFile, tmp_12_cast_fu_331_p1, "tmp_12_cast_fu_331_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_341_p1, "tmp_14_cast_fu_341_p1");
    sc_trace(mVcdFile, tmp_9_fu_352_p2, "tmp_9_fu_352_p2");
    sc_trace(mVcdFile, tmp_8_fu_346_p2, "tmp_8_fu_346_p2");
    sc_trace(mVcdFile, exitcond_flatten9_fu_168_p2, "exitcond_flatten9_fu_168_p2");
    sc_trace(mVcdFile, h_1_fu_162_p2, "h_1_fu_162_p2");
    sc_trace(mVcdFile, tmp_4_fu_196_p2, "tmp_4_fu_196_p2");
    sc_trace(mVcdFile, not_exitcond_flatten_fu_190_p2, "not_exitcond_flatten_fu_190_p2");
    sc_trace(mVcdFile, tmp_3_fu_208_p2, "tmp_3_fu_208_p2");
    sc_trace(mVcdFile, indvar_flatten_op_fu_222_p2, "indvar_flatten_op_fu_222_p2");
    sc_trace(mVcdFile, tmp_fu_236_p3, "tmp_fu_236_p3");
    sc_trace(mVcdFile, tmp_1_fu_247_p3, "tmp_1_fu_247_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_243_p1, "p_shl2_cast_fu_243_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_254_p1, "p_shl3_cast_fu_254_p1");
    sc_trace(mVcdFile, i_1_fu_264_p2, "i_1_fu_264_p2");
    sc_trace(mVcdFile, tmp_2_fu_258_p2, "tmp_2_fu_258_p2");
    sc_trace(mVcdFile, tmp_11_fu_278_p2, "tmp_11_fu_278_p2");
    sc_trace(mVcdFile, tmp_5_fu_297_p3, "tmp_5_fu_297_p3");
    sc_trace(mVcdFile, tmp_6_fu_308_p3, "tmp_6_fu_308_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_304_p1, "p_shl_cast_fu_304_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_315_p1, "p_shl1_cast_fu_315_p1");
    sc_trace(mVcdFile, tmp_1_mid2_cast_fu_294_p1, "tmp_1_mid2_cast_fu_294_p1");
    sc_trace(mVcdFile, tmp_7_fu_319_p2, "tmp_7_fu_319_p2");
    sc_trace(mVcdFile, tmp_10_fu_325_p2, "tmp_10_fu_325_p2");
    sc_trace(mVcdFile, tmp_12_fu_336_p2, "tmp_12_fu_336_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("floyd_warshall.hdltvin.dat");
    mHdltvoutHandle.open("floyd_warshall.hdltvout.dat");
}

floyd_warshall::~floyd_warshall() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void floyd_warshall::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        h_reg_106 = tmp_1_mid2_v_reg_373.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        h_reg_106 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_128 = tmp_4_mid2_reg_397.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_128 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten1_reg_95 = indvar_flatten_next1_reg_362.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten1_reg_95 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_117 = indvar_flatten_next_reg_392.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_117 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_reg_139 = j_1_reg_414.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_139 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0))) {
        A_addr_2_reg_424 =  (sc_lv<7>) (tmp_14_cast_fu_341_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        A_load_1_reg_429 = A_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten1_reg_358 = exitcond_flatten1_reg_358.read();
        exitcond_flatten1_reg_358 = exitcond_flatten1_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_150_p2.read(), ap_const_lv1_0))) {
        i_mid_reg_367 = i_mid_fu_174_p3.read();
        j_mid2_reg_386 = j_mid2_fu_214_p3.read();
        tmp_5_mid_reg_381 = tmp_5_mid_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_flatten_next1_reg_362 = indvar_flatten_next1_fu_156_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten1_fu_150_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_next_reg_392 = indvar_flatten_next_fu_228_p3.read();
        tmp_1_mid2_v_reg_373 = tmp_1_mid2_v_fu_182_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0))) {
        j_1_reg_414 = j_1_fu_289_p2.read();
        tmp_4_mid2_reg_397 = tmp_4_mid2_fu_269_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0))) {
        tmp_7_cast_reg_404 = tmp_7_cast_fu_275_p1.read();
    }
}

void floyd_warshall::thread_A_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<7>) (tmp_12_cast_fu_331_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
        A_address0 =  (sc_lv<7>) (tmp_13_cast_fu_284_p1.read());
    } else {
        A_address0 = "XXXXXXX";
    }
}

void floyd_warshall::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00000000.read(), ap_const_boolean_0))) {
            A_address1 = A_addr_2_reg_424.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
            A_address1 =  (sc_lv<7>) (tmp_14_cast_fu_341_p1.read());
        } else {
            A_address1 = "XXXXXXX";
        }
    } else {
        A_address1 = "XXXXXXX";
    }
}

void floyd_warshall::thread_A_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void floyd_warshall::thread_A_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void floyd_warshall::thread_A_d1() {
    A_d1 = tmp_8_fu_346_p2.read();
}

void floyd_warshall::thread_A_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_9_fu_352_p2.read()))) {
        A_we1 = ap_const_logic_1;
    } else {
        A_we1 = ap_const_logic_0;
    }
}

void floyd_warshall::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void floyd_warshall::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void floyd_warshall::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void floyd_warshall::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void floyd_warshall::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_pp0_stage1_flag00000000() {
    ap_block_pp0_stage1_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void floyd_warshall::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_150_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void floyd_warshall::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void floyd_warshall::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void floyd_warshall::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void floyd_warshall::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void floyd_warshall::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void floyd_warshall::thread_exitcond_flatten1_fu_150_p2() {
    exitcond_flatten1_fu_150_p2 = (!indvar_flatten1_phi_fu_99_p4.read().is_01() || !ap_const_lv10_3E8.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_phi_fu_99_p4.read() == ap_const_lv10_3E8);
}

void floyd_warshall::thread_exitcond_flatten9_fu_168_p2() {
    exitcond_flatten9_fu_168_p2 = (!indvar_flatten_phi_fu_121_p4.read().is_01() || !ap_const_lv8_64.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_phi_fu_121_p4.read() == ap_const_lv8_64);
}

void floyd_warshall::thread_h_1_fu_162_p2() {
    h_1_fu_162_p2 = (!h_phi_fu_110_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(h_phi_fu_110_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void floyd_warshall::thread_h_phi_fu_110_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        h_phi_fu_110_p4 = tmp_1_mid2_v_reg_373.read();
    } else {
        h_phi_fu_110_p4 = h_reg_106.read();
    }
}

void floyd_warshall::thread_i_1_fu_264_p2() {
    i_1_fu_264_p2 = (!i_mid_reg_367.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_mid_reg_367.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void floyd_warshall::thread_i_mid_fu_174_p3() {
    i_mid_fu_174_p3 = (!exitcond_flatten9_fu_168_p2.read()[0].is_01())? sc_lv<4>(): ((exitcond_flatten9_fu_168_p2.read()[0].to_bool())? ap_const_lv4_0: i_phi_fu_132_p4.read());
}

void floyd_warshall::thread_i_phi_fu_132_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_phi_fu_132_p4 = tmp_4_mid2_reg_397.read();
    } else {
        i_phi_fu_132_p4 = i_reg_128.read();
    }
}

void floyd_warshall::thread_indvar_flatten1_phi_fu_99_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        indvar_flatten1_phi_fu_99_p4 = indvar_flatten_next1_reg_362.read();
    } else {
        indvar_flatten1_phi_fu_99_p4 = indvar_flatten1_reg_95.read();
    }
}

void floyd_warshall::thread_indvar_flatten_next1_fu_156_p2() {
    indvar_flatten_next1_fu_156_p2 = (!indvar_flatten1_phi_fu_99_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten1_phi_fu_99_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void floyd_warshall::thread_indvar_flatten_next_fu_228_p3() {
    indvar_flatten_next_fu_228_p3 = (!exitcond_flatten9_fu_168_p2.read()[0].is_01())? sc_lv<8>(): ((exitcond_flatten9_fu_168_p2.read()[0].to_bool())? ap_const_lv8_1: indvar_flatten_op_fu_222_p2.read());
}

void floyd_warshall::thread_indvar_flatten_op_fu_222_p2() {
    indvar_flatten_op_fu_222_p2 = (!indvar_flatten_phi_fu_121_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(indvar_flatten_phi_fu_121_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void floyd_warshall::thread_indvar_flatten_phi_fu_121_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        indvar_flatten_phi_fu_121_p4 = indvar_flatten_next_reg_392.read();
    } else {
        indvar_flatten_phi_fu_121_p4 = indvar_flatten_reg_117.read();
    }
}

void floyd_warshall::thread_j_1_fu_289_p2() {
    j_1_fu_289_p2 = (!j_mid2_reg_386.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_mid2_reg_386.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void floyd_warshall::thread_j_mid2_fu_214_p3() {
    j_mid2_fu_214_p3 = (!tmp_3_fu_208_p2.read()[0].is_01())? sc_lv<4>(): ((tmp_3_fu_208_p2.read()[0].to_bool())? ap_const_lv4_0: j_phi_fu_143_p4.read());
}

void floyd_warshall::thread_j_phi_fu_143_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_358.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        j_phi_fu_143_p4 = j_1_reg_414.read();
    } else {
        j_phi_fu_143_p4 = j_reg_139.read();
    }
}

void floyd_warshall::thread_not_exitcond_flatten_fu_190_p2() {
    not_exitcond_flatten_fu_190_p2 = (exitcond_flatten9_fu_168_p2.read() ^ ap_const_lv1_1);
}

void floyd_warshall::thread_p_shl1_cast_fu_315_p1() {
    p_shl1_cast_fu_315_p1 = esl_zext<8,5>(tmp_6_fu_308_p3.read());
}

void floyd_warshall::thread_p_shl2_cast_fu_243_p1() {
    p_shl2_cast_fu_243_p1 = esl_zext<8,7>(tmp_fu_236_p3.read());
}

void floyd_warshall::thread_p_shl3_cast_fu_254_p1() {
    p_shl3_cast_fu_254_p1 = esl_zext<8,5>(tmp_1_fu_247_p3.read());
}

void floyd_warshall::thread_p_shl_cast_fu_304_p1() {
    p_shl_cast_fu_304_p1 = esl_zext<8,7>(tmp_5_fu_297_p3.read());
}

void floyd_warshall::thread_tmp_10_fu_325_p2() {
    tmp_10_fu_325_p2 = (!tmp_1_mid2_cast_fu_294_p1.read().is_01() || !tmp_7_fu_319_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_1_mid2_cast_fu_294_p1.read()) + sc_biguint<8>(tmp_7_fu_319_p2.read()));
}

void floyd_warshall::thread_tmp_11_fu_278_p2() {
    tmp_11_fu_278_p2 = (!tmp_7_cast_fu_275_p1.read().is_01() || !tmp_2_fu_258_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_7_cast_fu_275_p1.read()) + sc_biguint<8>(tmp_2_fu_258_p2.read()));
}

void floyd_warshall::thread_tmp_12_cast_fu_331_p1() {
    tmp_12_cast_fu_331_p1 = esl_zext<64,8>(tmp_10_fu_325_p2.read());
}

void floyd_warshall::thread_tmp_12_fu_336_p2() {
    tmp_12_fu_336_p2 = (!tmp_7_cast_reg_404.read().is_01() || !tmp_7_fu_319_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_7_cast_reg_404.read()) + sc_biguint<8>(tmp_7_fu_319_p2.read()));
}

void floyd_warshall::thread_tmp_13_cast_fu_284_p1() {
    tmp_13_cast_fu_284_p1 = esl_zext<64,8>(tmp_11_fu_278_p2.read());
}

void floyd_warshall::thread_tmp_14_cast_fu_341_p1() {
    tmp_14_cast_fu_341_p1 = esl_zext<64,8>(tmp_12_fu_336_p2.read());
}

void floyd_warshall::thread_tmp_1_fu_247_p3() {
    tmp_1_fu_247_p3 = esl_concat<4,1>(tmp_1_mid2_v_reg_373.read(), ap_const_lv1_0);
}

void floyd_warshall::thread_tmp_1_mid2_cast_fu_294_p1() {
    tmp_1_mid2_cast_fu_294_p1 = esl_zext<8,4>(tmp_1_mid2_v_reg_373.read());
}

void floyd_warshall::thread_tmp_1_mid2_v_fu_182_p3() {
    tmp_1_mid2_v_fu_182_p3 = (!exitcond_flatten9_fu_168_p2.read()[0].is_01())? sc_lv<4>(): ((exitcond_flatten9_fu_168_p2.read()[0].to_bool())? h_1_fu_162_p2.read(): h_phi_fu_110_p4.read());
}

void floyd_warshall::thread_tmp_2_fu_258_p2() {
    tmp_2_fu_258_p2 = (!p_shl2_cast_fu_243_p1.read().is_01() || !p_shl3_cast_fu_254_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl2_cast_fu_243_p1.read()) + sc_biguint<8>(p_shl3_cast_fu_254_p1.read()));
}

void floyd_warshall::thread_tmp_3_fu_208_p2() {
    tmp_3_fu_208_p2 = (tmp_5_mid_fu_202_p2.read() | exitcond_flatten9_fu_168_p2.read());
}

void floyd_warshall::thread_tmp_4_fu_196_p2() {
    tmp_4_fu_196_p2 = (!j_phi_fu_143_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_phi_fu_143_p4.read() == ap_const_lv4_A);
}

void floyd_warshall::thread_tmp_4_mid2_fu_269_p3() {
    tmp_4_mid2_fu_269_p3 = (!tmp_5_mid_reg_381.read()[0].is_01())? sc_lv<4>(): ((tmp_5_mid_reg_381.read()[0].to_bool())? i_1_fu_264_p2.read(): i_mid_reg_367.read());
}

void floyd_warshall::thread_tmp_5_fu_297_p3() {
    tmp_5_fu_297_p3 = esl_concat<4,3>(tmp_4_mid2_reg_397.read(), ap_const_lv3_0);
}

void floyd_warshall::thread_tmp_5_mid_fu_202_p2() {
    tmp_5_mid_fu_202_p2 = (tmp_4_fu_196_p2.read() & not_exitcond_flatten_fu_190_p2.read());
}

void floyd_warshall::thread_tmp_6_fu_308_p3() {
    tmp_6_fu_308_p3 = esl_concat<4,1>(tmp_4_mid2_reg_397.read(), ap_const_lv1_0);
}

void floyd_warshall::thread_tmp_7_cast_fu_275_p1() {
    tmp_7_cast_fu_275_p1 = esl_zext<8,4>(j_mid2_reg_386.read());
}

void floyd_warshall::thread_tmp_7_fu_319_p2() {
    tmp_7_fu_319_p2 = (!p_shl_cast_fu_304_p1.read().is_01() || !p_shl1_cast_fu_315_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl_cast_fu_304_p1.read()) + sc_biguint<8>(p_shl1_cast_fu_315_p1.read()));
}

void floyd_warshall::thread_tmp_8_fu_346_p2() {
    tmp_8_fu_346_p2 = (!A_load_1_reg_429.read().is_01() || !A_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(A_load_1_reg_429.read()) + sc_biguint<32>(A_q0.read()));
}

void floyd_warshall::thread_tmp_9_fu_352_p2() {
    tmp_9_fu_352_p2 = (!tmp_8_fu_346_p2.read().is_01() || !A_q1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(tmp_8_fu_346_p2.read()) < sc_biguint<32>(A_q1.read()));
}

void floyd_warshall::thread_tmp_fu_236_p3() {
    tmp_fu_236_p3 = esl_concat<4,3>(tmp_1_mid2_v_reg_373.read(), ap_const_lv3_0);
}

void floyd_warshall::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_150_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_150_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

void floyd_warshall::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

