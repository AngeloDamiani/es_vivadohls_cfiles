// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "merge.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic merge::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic merge::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> merge::ap_ST_fsm_state1 = "1";
const sc_lv<5> merge::ap_ST_fsm_state2 = "10";
const sc_lv<5> merge::ap_ST_fsm_state3 = "100";
const sc_lv<5> merge::ap_ST_fsm_state4 = "1000";
const sc_lv<5> merge::ap_ST_fsm_state5 = "10000";
const sc_lv<32> merge::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> merge::ap_const_lv32_1 = "1";
const sc_lv<1> merge::ap_const_lv1_0 = "0";
const sc_lv<1> merge::ap_const_lv1_1 = "1";
const sc_lv<32> merge::ap_const_lv32_2 = "10";
const sc_lv<32> merge::ap_const_lv32_3 = "11";
const sc_lv<32> merge::ap_const_lv32_4 = "100";
const sc_lv<4> merge::ap_const_lv4_0 = "0000";
const sc_lv<64> merge::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> merge::ap_const_lv4_8 = "1000";
const sc_lv<4> merge::ap_const_lv4_7 = "111";
const sc_lv<4> merge::ap_const_lv4_6 = "110";
const sc_lv<4> merge::ap_const_lv4_5 = "101";
const sc_lv<4> merge::ap_const_lv4_4 = "100";
const sc_lv<4> merge::ap_const_lv4_3 = "11";
const sc_lv<4> merge::ap_const_lv4_2 = "10";
const sc_lv<4> merge::ap_const_lv4_1 = "1";
const sc_lv<64> merge::ap_const_lv64_1 = "1";
const sc_lv<8> merge::ap_const_lv8_1 = "1";
const bool merge::ap_const_boolean_1 = true;

merge::merge(sc_module_name name) : sc_module(name), mVcdFile(0) {
    x_U = new merge_x("x_U");
    x_U->clk(ap_clk);
    x_U->reset(ap_rst);
    x_U->address0(x_address0);
    x_U->ce0(x_ce0);
    x_U->we0(x_we0);
    x_U->d0(x_d0);
    x_U->q0(x_q0);
    mergesort_mux_104bkb_U1 = new mergesort_mux_104bkb<1,1,64,64,64,64,64,64,64,64,64,64,4,64>("mergesort_mux_104bkb_U1");
    mergesort_mux_104bkb_U1->din1(arr_0_read);
    mergesort_mux_104bkb_U1->din2(arr_1_read);
    mergesort_mux_104bkb_U1->din3(arr_2_read);
    mergesort_mux_104bkb_U1->din4(arr_3_read);
    mergesort_mux_104bkb_U1->din5(arr_4_read);
    mergesort_mux_104bkb_U1->din6(arr_5_read);
    mergesort_mux_104bkb_U1->din7(arr_6_read);
    mergesort_mux_104bkb_U1->din8(arr_7_read);
    mergesort_mux_104bkb_U1->din9(arr_8_read);
    mergesort_mux_104bkb_U1->din10(arr_9_read);
    mergesort_mux_104bkb_U1->din11(tmp_4_fu_458_p11);
    mergesort_mux_104bkb_U1->dout(tmp_4_fu_458_p12);
    mergesort_mux_104bkb_U2 = new mergesort_mux_104bkb<1,1,64,64,64,64,64,64,64,64,64,64,4,64>("mergesort_mux_104bkb_U2");
    mergesort_mux_104bkb_U2->din1(arr_0_read);
    mergesort_mux_104bkb_U2->din2(arr_1_read);
    mergesort_mux_104bkb_U2->din3(arr_2_read);
    mergesort_mux_104bkb_U2->din4(arr_3_read);
    mergesort_mux_104bkb_U2->din5(arr_4_read);
    mergesort_mux_104bkb_U2->din6(arr_5_read);
    mergesort_mux_104bkb_U2->din7(arr_6_read);
    mergesort_mux_104bkb_U2->din8(arr_7_read);
    mergesort_mux_104bkb_U2->din9(arr_8_read);
    mergesort_mux_104bkb_U2->din10(arr_9_read);
    mergesort_mux_104bkb_U2->din11(tmp_18_fu_479_p11);
    mergesort_mux_104bkb_U2->dout(tmp_18_fu_479_p12);
    mergesort_mux_104bkb_U3 = new mergesort_mux_104bkb<1,1,64,64,64,64,64,64,64,64,64,64,4,64>("mergesort_mux_104bkb_U3");
    mergesort_mux_104bkb_U3->din1(arr_0_read);
    mergesort_mux_104bkb_U3->din2(arr_1_read);
    mergesort_mux_104bkb_U3->din3(arr_2_read);
    mergesort_mux_104bkb_U3->din4(arr_3_read);
    mergesort_mux_104bkb_U3->din5(arr_4_read);
    mergesort_mux_104bkb_U3->din6(arr_5_read);
    mergesort_mux_104bkb_U3->din7(arr_6_read);
    mergesort_mux_104bkb_U3->din8(arr_7_read);
    mergesort_mux_104bkb_U3->din9(arr_8_read);
    mergesort_mux_104bkb_U3->din10(arr_9_read);
    mergesort_mux_104bkb_U3->din11(tmp_24_fu_550_p11);
    mergesort_mux_104bkb_U3->dout(tmp_24_fu_550_p12);
    mergesort_mux_104bkb_U4 = new mergesort_mux_104bkb<1,1,64,64,64,64,64,64,64,64,64,64,4,64>("mergesort_mux_104bkb_U4");
    mergesort_mux_104bkb_U4->din1(arr_0_read);
    mergesort_mux_104bkb_U4->din2(arr_1_read);
    mergesort_mux_104bkb_U4->din3(arr_2_read);
    mergesort_mux_104bkb_U4->din4(arr_3_read);
    mergesort_mux_104bkb_U4->din5(arr_4_read);
    mergesort_mux_104bkb_U4->din6(arr_5_read);
    mergesort_mux_104bkb_U4->din7(arr_6_read);
    mergesort_mux_104bkb_U4->din8(arr_7_read);
    mergesort_mux_104bkb_U4->din9(arr_8_read);
    mergesort_mux_104bkb_U4->din10(arr_9_read);
    mergesort_mux_104bkb_U4->din11(tmp_22_fu_592_p11);
    mergesort_mux_104bkb_U4->dout(tmp_22_fu_592_p12);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_628_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_628_p2 );

    SC_METHOD(thread_arr_0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_0_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_1_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_2_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_3);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_3_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_4);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_4_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_5);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_5_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_6);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_6_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_7);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_7_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_8);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_8_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_9);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_q0 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_arr_9_ap_vld);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_29_fu_645_p1 );

    SC_METHOD(thread_i1_assign_fu_502_p2);
    sensitive << ( p_0_fu_112 );

    SC_METHOD(thread_i2_2_fu_513_p2);
    sensitive << ( i2_1_fu_116 );

    SC_METHOD(thread_i2_fu_392_p2);
    sensitive << ( f1 );

    SC_METHOD(thread_i_1_fu_448_p2);
    sensitive << ( i_reg_321 );

    SC_METHOD(thread_i_5_fu_609_p2);
    sensitive << ( i_3_reg_360 );

    SC_METHOD(thread_i_6_fu_567_p2);
    sensitive << ( i_2_reg_341 );

    SC_METHOD(thread_i_7_fu_633_p2);
    sensitive << ( i_4_reg_380 );

    SC_METHOD(thread_i_cast_fu_414_p1);
    sensitive << ( i_reg_321 );

    SC_METHOD(thread_rev1_fu_436_p2);
    sensitive << ( slt1_fu_431_p2 );

    SC_METHOD(thread_rev_fu_425_p2);
    sensitive << ( slt_fu_420_p2 );

    SC_METHOD(thread_slt1_fu_431_p2);
    sensitive << ( f1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_0_fu_112 );

    SC_METHOD(thread_slt_fu_420_p2);
    sensitive << ( f2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i2_1_fu_116 );

    SC_METHOD(thread_tmp_10_fu_541_p2);
    sensitive << ( f1 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_9_fu_537_p1 );

    SC_METHOD(thread_tmp_11_fu_615_p2);
    sensitive << ( tmp_5_reg_351 );

    SC_METHOD(thread_tmp_12_fu_573_p2);
    sensitive << ( tmp_8_reg_332 );

    SC_METHOD(thread_tmp_15_fu_624_p1);
    sensitive << ( tmp_14_reg_370 );

    SC_METHOD(thread_tmp_16_fu_628_p2);
    sensitive << ( f2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_15_fu_624_p1 );

    SC_METHOD(thread_tmp_17_fu_649_p2);
    sensitive << ( tmp_14_reg_370 );

    SC_METHOD(thread_tmp_18_fu_479_p11);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i2_1_fu_116 );

    SC_METHOD(thread_tmp_19_fu_533_p1);
    sensitive << ( i2_1_fu_116 );

    SC_METHOD(thread_tmp_1_fu_496_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( tmp_4_fu_458_p12 );
    sensitive << ( tmp_18_fu_479_p12 );

    SC_METHOD(thread_tmp_20_fu_529_p1);
    sensitive << ( p_0_fu_112 );

    SC_METHOD(thread_tmp_22_fu_592_p11);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_reg_351 );

    SC_METHOD(thread_tmp_24_fu_550_p11);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_8_reg_332 );

    SC_METHOD(thread_tmp_28_fu_621_p1);
    sensitive << ( i1 );

    SC_METHOD(thread_tmp_29_fu_645_p1);
    sensitive << ( tmp_14_reg_370 );

    SC_METHOD(thread_tmp_2_fu_524_p2);
    sensitive << ( f1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( p_0_fu_112 );

    SC_METHOD(thread_tmp_4_fu_458_p11);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_0_fu_112 );

    SC_METHOD(thread_tmp_6_fu_579_p1);
    sensitive << ( tmp_5_reg_351 );

    SC_METHOD(thread_tmp_7_fu_583_p2);
    sensitive << ( f2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_579_p1 );

    SC_METHOD(thread_tmp_9_fu_537_p1);
    sensitive << ( tmp_8_reg_332 );

    SC_METHOD(thread_tmp_s_fu_442_p2);
    sensitive << ( rev_fu_425_p2 );
    sensitive << ( rev1_fu_436_p2 );

    SC_METHOD(thread_x_addr_gep_fu_283_p3);
    sensitive << ( i_cast_fu_414_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( tmp_1_fu_496_p2 );

    SC_METHOD(thread_x_address0);
    sensitive << ( i_cast_fu_414_p1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_fu_541_p2 );
    sensitive << ( tmp_7_fu_583_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_341 );
    sensitive << ( i_3_reg_360 );
    sensitive << ( i_4_reg_380 );
    sensitive << ( tmp_1_fu_496_p2 );
    sensitive << ( x_addr_gep_fu_283_p3 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_fu_541_p2 );
    sensitive << ( tmp_7_fu_583_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_496_p2 );

    SC_METHOD(thread_x_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_fu_541_p2 );
    sensitive << ( tmp_7_fu_583_p2 );
    sensitive << ( tmp_1_fu_496_p2 );
    sensitive << ( tmp_4_fu_458_p12 );
    sensitive << ( tmp_18_fu_479_p12 );
    sensitive << ( tmp_24_fu_550_p12 );
    sensitive << ( tmp_22_fu_592_p12 );

    SC_METHOD(thread_x_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_fu_541_p2 );
    sensitive << ( tmp_7_fu_583_p2 );
    sensitive << ( tmp_1_fu_496_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_2_reg_785 );
    sensitive << ( tmp_s_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_fu_541_p2 );
    sensitive << ( tmp_7_fu_583_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_628_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "merge_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, i1, "(port)i1");
    sc_trace(mVcdFile, f1, "(port)f1");
    sc_trace(mVcdFile, f2, "(port)f2");
    sc_trace(mVcdFile, arr_0, "(port)arr_0");
    sc_trace(mVcdFile, arr_0_ap_vld, "(port)arr_0_ap_vld");
    sc_trace(mVcdFile, arr_0_read, "(port)arr_0_read");
    sc_trace(mVcdFile, arr_1, "(port)arr_1");
    sc_trace(mVcdFile, arr_1_ap_vld, "(port)arr_1_ap_vld");
    sc_trace(mVcdFile, arr_1_read, "(port)arr_1_read");
    sc_trace(mVcdFile, arr_2, "(port)arr_2");
    sc_trace(mVcdFile, arr_2_ap_vld, "(port)arr_2_ap_vld");
    sc_trace(mVcdFile, arr_2_read, "(port)arr_2_read");
    sc_trace(mVcdFile, arr_3, "(port)arr_3");
    sc_trace(mVcdFile, arr_3_ap_vld, "(port)arr_3_ap_vld");
    sc_trace(mVcdFile, arr_3_read, "(port)arr_3_read");
    sc_trace(mVcdFile, arr_4, "(port)arr_4");
    sc_trace(mVcdFile, arr_4_ap_vld, "(port)arr_4_ap_vld");
    sc_trace(mVcdFile, arr_4_read, "(port)arr_4_read");
    sc_trace(mVcdFile, arr_5, "(port)arr_5");
    sc_trace(mVcdFile, arr_5_ap_vld, "(port)arr_5_ap_vld");
    sc_trace(mVcdFile, arr_5_read, "(port)arr_5_read");
    sc_trace(mVcdFile, arr_6, "(port)arr_6");
    sc_trace(mVcdFile, arr_6_ap_vld, "(port)arr_6_ap_vld");
    sc_trace(mVcdFile, arr_6_read, "(port)arr_6_read");
    sc_trace(mVcdFile, arr_7, "(port)arr_7");
    sc_trace(mVcdFile, arr_7_ap_vld, "(port)arr_7_ap_vld");
    sc_trace(mVcdFile, arr_7_read, "(port)arr_7_read");
    sc_trace(mVcdFile, arr_8, "(port)arr_8");
    sc_trace(mVcdFile, arr_8_ap_vld, "(port)arr_8_ap_vld");
    sc_trace(mVcdFile, arr_8_read, "(port)arr_8_read");
    sc_trace(mVcdFile, arr_9, "(port)arr_9");
    sc_trace(mVcdFile, arr_9_ap_vld, "(port)arr_9_ap_vld");
    sc_trace(mVcdFile, arr_9_read, "(port)arr_9_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_cast_fu_414_p1, "i_cast_fu_414_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_448_p2, "i_1_fu_448_p2");
    sc_trace(mVcdFile, tmp_2_fu_524_p2, "tmp_2_fu_524_p2");
    sc_trace(mVcdFile, tmp_2_reg_785, "tmp_2_reg_785");
    sc_trace(mVcdFile, tmp_s_fu_442_p2, "tmp_s_fu_442_p2");
    sc_trace(mVcdFile, tmp_20_fu_529_p1, "tmp_20_fu_529_p1");
    sc_trace(mVcdFile, tmp_19_fu_533_p1, "tmp_19_fu_533_p1");
    sc_trace(mVcdFile, i_6_fu_567_p2, "i_6_fu_567_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_10_fu_541_p2, "tmp_10_fu_541_p2");
    sc_trace(mVcdFile, tmp_12_fu_573_p2, "tmp_12_fu_573_p2");
    sc_trace(mVcdFile, i_5_fu_609_p2, "i_5_fu_609_p2");
    sc_trace(mVcdFile, tmp_7_fu_583_p2, "tmp_7_fu_583_p2");
    sc_trace(mVcdFile, tmp_11_fu_615_p2, "tmp_11_fu_615_p2");
    sc_trace(mVcdFile, tmp_28_fu_621_p1, "tmp_28_fu_621_p1");
    sc_trace(mVcdFile, i_7_fu_633_p2, "i_7_fu_633_p2");
    sc_trace(mVcdFile, i_7_reg_833, "i_7_reg_833");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_16_fu_628_p2, "tmp_16_fu_628_p2");
    sc_trace(mVcdFile, tmp_17_fu_649_p2, "tmp_17_fu_649_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, x_address0, "x_address0");
    sc_trace(mVcdFile, x_ce0, "x_ce0");
    sc_trace(mVcdFile, x_we0, "x_we0");
    sc_trace(mVcdFile, x_d0, "x_d0");
    sc_trace(mVcdFile, x_q0, "x_q0");
    sc_trace(mVcdFile, i_reg_321, "i_reg_321");
    sc_trace(mVcdFile, tmp_8_reg_332, "tmp_8_reg_332");
    sc_trace(mVcdFile, i_2_reg_341, "i_2_reg_341");
    sc_trace(mVcdFile, tmp_5_reg_351, "tmp_5_reg_351");
    sc_trace(mVcdFile, i_3_reg_360, "i_3_reg_360");
    sc_trace(mVcdFile, tmp_14_reg_370, "tmp_14_reg_370");
    sc_trace(mVcdFile, i_4_reg_380, "i_4_reg_380");
    sc_trace(mVcdFile, tmp_1_fu_496_p2, "tmp_1_fu_496_p2");
    sc_trace(mVcdFile, x_addr_gep_fu_283_p3, "x_addr_gep_fu_283_p3");
    sc_trace(mVcdFile, p_0_fu_112, "p_0_fu_112");
    sc_trace(mVcdFile, i1_assign_fu_502_p2, "i1_assign_fu_502_p2");
    sc_trace(mVcdFile, i2_1_fu_116, "i2_1_fu_116");
    sc_trace(mVcdFile, i2_fu_392_p2, "i2_fu_392_p2");
    sc_trace(mVcdFile, i2_2_fu_513_p2, "i2_2_fu_513_p2");
    sc_trace(mVcdFile, tmp_29_fu_645_p1, "tmp_29_fu_645_p1");
    sc_trace(mVcdFile, tmp_4_fu_458_p12, "tmp_4_fu_458_p12");
    sc_trace(mVcdFile, tmp_18_fu_479_p12, "tmp_18_fu_479_p12");
    sc_trace(mVcdFile, tmp_24_fu_550_p12, "tmp_24_fu_550_p12");
    sc_trace(mVcdFile, tmp_22_fu_592_p12, "tmp_22_fu_592_p12");
    sc_trace(mVcdFile, slt_fu_420_p2, "slt_fu_420_p2");
    sc_trace(mVcdFile, slt1_fu_431_p2, "slt1_fu_431_p2");
    sc_trace(mVcdFile, rev_fu_425_p2, "rev_fu_425_p2");
    sc_trace(mVcdFile, rev1_fu_436_p2, "rev1_fu_436_p2");
    sc_trace(mVcdFile, tmp_4_fu_458_p11, "tmp_4_fu_458_p11");
    sc_trace(mVcdFile, tmp_18_fu_479_p11, "tmp_18_fu_479_p11");
    sc_trace(mVcdFile, tmp_9_fu_537_p1, "tmp_9_fu_537_p1");
    sc_trace(mVcdFile, tmp_24_fu_550_p11, "tmp_24_fu_550_p11");
    sc_trace(mVcdFile, tmp_6_fu_579_p1, "tmp_6_fu_579_p1");
    sc_trace(mVcdFile, tmp_22_fu_592_p11, "tmp_22_fu_592_p11");
    sc_trace(mVcdFile, tmp_15_fu_624_p1, "tmp_15_fu_624_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

merge::~merge() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete x_U;
    delete mergesort_mux_104bkb_U1;
    delete mergesort_mux_104bkb_U2;
    delete mergesort_mux_104bkb_U3;
    delete mergesort_mux_104bkb_U4;
}

void merge::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_496_p2.read()))) {
        i2_1_fu_116 = i2_2_fu_513_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i2_1_fu_116 = i2_fu_392_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read()))) {
        i_2_reg_341 = i_6_fu_567_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_2_fu_524_p2.read(), ap_const_lv1_0))) {
        i_2_reg_341 = i_cast_fu_414_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read()))) {
        i_3_reg_360 = i_5_fu_609_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_2_fu_524_p2.read(), ap_const_lv1_1))) {
        i_3_reg_360 = i_cast_fu_414_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_4_reg_380 = i_7_reg_833.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                ((esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_541_p2.read())) || 
                 (esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_583_p2.read()))))) {
        i_4_reg_380 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1))) {
        i_reg_321 = i_1_fu_448_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_321 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_496_p2.read()))) {
        p_0_fu_112 = i1_assign_fu_502_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_fu_112 = i1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_14_reg_370 = tmp_17_fu_649_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                ((esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_541_p2.read())) || 
                 (esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_583_p2.read()))))) {
        tmp_14_reg_370 = tmp_28_fu_621_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read()))) {
        tmp_5_reg_351 = tmp_11_fu_615_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_2_fu_524_p2.read(), ap_const_lv1_1))) {
        tmp_5_reg_351 = tmp_19_fu_533_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read()))) {
        tmp_8_reg_332 = tmp_12_fu_573_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_2_fu_524_p2.read(), ap_const_lv1_0))) {
        tmp_8_reg_332 = tmp_20_fu_529_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_7_reg_833 = i_7_fu_633_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0))) {
        tmp_2_reg_785 = tmp_2_fu_524_p2.read();
    }
}

void merge::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void merge::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void merge::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void merge::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void merge::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void merge::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_628_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void merge::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void merge::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_628_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void merge::thread_arr_0() {
    arr_0 = x_q0.read();
}

void merge::thread_arr_0_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(ap_const_lv4_0, tmp_29_fu_645_p1.read()))) {
        arr_0_ap_vld = ap_const_logic_1;
    } else {
        arr_0_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_1() {
    arr_1 = x_q0.read();
}

void merge::thread_arr_1_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_1))) {
        arr_1_ap_vld = ap_const_logic_1;
    } else {
        arr_1_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_2() {
    arr_2 = x_q0.read();
}

void merge::thread_arr_2_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_2))) {
        arr_2_ap_vld = ap_const_logic_1;
    } else {
        arr_2_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_3() {
    arr_3 = x_q0.read();
}

void merge::thread_arr_3_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_3))) {
        arr_3_ap_vld = ap_const_logic_1;
    } else {
        arr_3_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_4() {
    arr_4 = x_q0.read();
}

void merge::thread_arr_4_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_4))) {
        arr_4_ap_vld = ap_const_logic_1;
    } else {
        arr_4_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_5() {
    arr_5 = x_q0.read();
}

void merge::thread_arr_5_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_5))) {
        arr_5_ap_vld = ap_const_logic_1;
    } else {
        arr_5_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_6() {
    arr_6 = x_q0.read();
}

void merge::thread_arr_6_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_6))) {
        arr_6_ap_vld = ap_const_logic_1;
    } else {
        arr_6_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_7() {
    arr_7 = x_q0.read();
}

void merge::thread_arr_7_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_7))) {
        arr_7_ap_vld = ap_const_logic_1;
    } else {
        arr_7_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_8() {
    arr_8 = x_q0.read();
}

void merge::thread_arr_8_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_8))) {
        arr_8_ap_vld = ap_const_logic_1;
    } else {
        arr_8_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_arr_9() {
    arr_9 = x_q0.read();
}

void merge::thread_arr_9_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,4,4>(ap_const_lv4_0, tmp_29_fu_645_p1.read()) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_1) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_2) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_3) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_4) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_5) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_6) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_7) && 
         !esl_seteq<1,4,4>(tmp_29_fu_645_p1.read(), ap_const_lv4_8))) {
        arr_9_ap_vld = ap_const_logic_1;
    } else {
        arr_9_ap_vld = ap_const_logic_0;
    }
}

void merge::thread_i1_assign_fu_502_p2() {
    i1_assign_fu_502_p2 = (!p_0_fu_112.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(p_0_fu_112.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void merge::thread_i2_2_fu_513_p2() {
    i2_2_fu_513_p2 = (!i2_1_fu_116.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(i2_1_fu_116.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void merge::thread_i2_fu_392_p2() {
    i2_fu_392_p2 = (!f1.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(f1.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void merge::thread_i_1_fu_448_p2() {
    i_1_fu_448_p2 = (!i_reg_321.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_321.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void merge::thread_i_5_fu_609_p2() {
    i_5_fu_609_p2 = (!ap_const_lv64_1.is_01() || !i_3_reg_360.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(i_3_reg_360.read()));
}

void merge::thread_i_6_fu_567_p2() {
    i_6_fu_567_p2 = (!ap_const_lv64_1.is_01() || !i_2_reg_341.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_1) + sc_biguint<64>(i_2_reg_341.read()));
}

void merge::thread_i_7_fu_633_p2() {
    i_7_fu_633_p2 = (!i_4_reg_380.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(i_4_reg_380.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void merge::thread_i_cast_fu_414_p1() {
    i_cast_fu_414_p1 = esl_zext<64,4>(i_reg_321.read());
}

void merge::thread_rev1_fu_436_p2() {
    rev1_fu_436_p2 = (slt1_fu_431_p2.read() ^ ap_const_lv1_1);
}

void merge::thread_rev_fu_425_p2() {
    rev_fu_425_p2 = (slt_fu_420_p2.read() ^ ap_const_lv1_1);
}

void merge::thread_slt1_fu_431_p2() {
    slt1_fu_431_p2 = (!f1.read().is_01() || !p_0_fu_112.read().is_01())? sc_lv<1>(): (sc_bigint<64>(f1.read()) < sc_bigint<64>(p_0_fu_112.read()));
}

void merge::thread_slt_fu_420_p2() {
    slt_fu_420_p2 = (!f2.read().is_01() || !i2_1_fu_116.read().is_01())? sc_lv<1>(): (sc_bigint<64>(f2.read()) < sc_bigint<64>(i2_1_fu_116.read()));
}

void merge::thread_tmp_10_fu_541_p2() {
    tmp_10_fu_541_p2 = (!tmp_9_fu_537_p1.read().is_01() || !f1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_9_fu_537_p1.read()) > sc_bigint<64>(f1.read()));
}

void merge::thread_tmp_11_fu_615_p2() {
    tmp_11_fu_615_p2 = (!ap_const_lv8_1.is_01() || !tmp_5_reg_351.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(tmp_5_reg_351.read()));
}

void merge::thread_tmp_12_fu_573_p2() {
    tmp_12_fu_573_p2 = (!ap_const_lv8_1.is_01() || !tmp_8_reg_332.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(tmp_8_reg_332.read()));
}

void merge::thread_tmp_15_fu_624_p1() {
    tmp_15_fu_624_p1 = esl_sext<64,8>(tmp_14_reg_370.read());
}

void merge::thread_tmp_16_fu_628_p2() {
    tmp_16_fu_628_p2 = (!tmp_15_fu_624_p1.read().is_01() || !f2.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_15_fu_624_p1.read()) > sc_bigint<64>(f2.read()));
}

void merge::thread_tmp_17_fu_649_p2() {
    tmp_17_fu_649_p2 = (!tmp_14_reg_370.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_14_reg_370.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void merge::thread_tmp_18_fu_479_p11() {
    tmp_18_fu_479_p11 = i2_1_fu_116.read().range(4-1, 0);
}

void merge::thread_tmp_19_fu_533_p1() {
    tmp_19_fu_533_p1 = i2_1_fu_116.read().range(8-1, 0);
}

void merge::thread_tmp_1_fu_496_p2() {
    tmp_1_fu_496_p2 = (!tmp_4_fu_458_p12.read().is_01() || !tmp_18_fu_479_p12.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_4_fu_458_p12.read()) > sc_bigint<64>(tmp_18_fu_479_p12.read()));
}

void merge::thread_tmp_20_fu_529_p1() {
    tmp_20_fu_529_p1 = p_0_fu_112.read().range(8-1, 0);
}

void merge::thread_tmp_22_fu_592_p11() {
    tmp_22_fu_592_p11 = tmp_5_reg_351.read().range(4-1, 0);
}

void merge::thread_tmp_24_fu_550_p11() {
    tmp_24_fu_550_p11 = tmp_8_reg_332.read().range(4-1, 0);
}

void merge::thread_tmp_28_fu_621_p1() {
    tmp_28_fu_621_p1 = i1.read().range(8-1, 0);
}

void merge::thread_tmp_29_fu_645_p1() {
    tmp_29_fu_645_p1 = tmp_14_reg_370.read().range(4-1, 0);
}

void merge::thread_tmp_2_fu_524_p2() {
    tmp_2_fu_524_p2 = (!p_0_fu_112.read().is_01() || !f1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(p_0_fu_112.read()) > sc_bigint<64>(f1.read()));
}

void merge::thread_tmp_4_fu_458_p11() {
    tmp_4_fu_458_p11 = p_0_fu_112.read().range(4-1, 0);
}

void merge::thread_tmp_6_fu_579_p1() {
    tmp_6_fu_579_p1 = esl_sext<64,8>(tmp_5_reg_351.read());
}

void merge::thread_tmp_7_fu_583_p2() {
    tmp_7_fu_583_p2 = (!tmp_6_fu_579_p1.read().is_01() || !f2.read().is_01())? sc_lv<1>(): (sc_bigint<64>(tmp_6_fu_579_p1.read()) > sc_bigint<64>(f2.read()));
}

void merge::thread_tmp_9_fu_537_p1() {
    tmp_9_fu_537_p1 = esl_sext<64,8>(tmp_8_reg_332.read());
}

void merge::thread_tmp_s_fu_442_p2() {
    tmp_s_fu_442_p2 = (rev_fu_425_p2.read() & rev1_fu_436_p2.read());
}

void merge::thread_x_addr_gep_fu_283_p3() {
    x_addr_gep_fu_283_p3 =  (sc_lv<4>) (i_cast_fu_414_p1.read());
}

void merge::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        x_address0 =  (sc_lv<4>) (i_4_reg_380.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read()))) {
        x_address0 =  (sc_lv<4>) (i_3_reg_360.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read()))) {
        x_address0 =  (sc_lv<4>) (i_2_reg_341.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_496_p2.read()))) {
        x_address0 = x_addr_gep_fu_283_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_496_p2.read()))) {
        x_address0 =  (sc_lv<4>) (i_cast_fu_414_p1.read());
    } else {
        x_address0 = "XXXX";
    }
}

void merge::thread_x_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_496_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_496_p2.read())))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void merge::thread_x_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read()))) {
        x_d0 = tmp_22_fu_592_p12.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read()))) {
        x_d0 = tmp_24_fu_550_p12.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_496_p2.read()))) {
        x_d0 = tmp_18_fu_479_p12.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_496_p2.read()))) {
        x_d0 = tmp_4_fu_458_p12.read();
    } else {
        x_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void merge::thread_x_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_541_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_583_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_496_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_496_p2.read())))) {
        x_we0 = ap_const_logic_1;
    } else {
        x_we0 = ap_const_logic_0;
    }
}

void merge::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_442_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && ((esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_10_fu_541_p2.read())) || 
  (esl_seteq<1,1,1>(tmp_2_reg_785.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_7_fu_583_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_628_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

