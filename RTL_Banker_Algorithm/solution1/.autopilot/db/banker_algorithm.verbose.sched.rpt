

================================================================
== Vivado HLS Report for 'banker_algorithm'
================================================================
* Date:           Thu Mar  1 11:51:50 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        RTL_Banker_Algorithm
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.44|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    8|   69|    9|   70|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+
        |- Loop 1     |    6|   67|  6 ~ 16  |          -|          -| 1 ~ 4 |    no    |
        | + Loop 1.1  |    4|   14|         4|          -|          -| 1 ~ 3 |    no    |
        +-------------+-----+-----+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 7
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp)
	7  / (tmp)
3 --> 
	4  / (!tmp_1)
	2  / (tmp_1)
4 --> 
	5  / true
5 --> 
	6  / (!tmp_4)
	7  / (tmp_4)
6 --> 
	3  / true
7 --> 
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: StgValue_8 (5)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([3 x i64]* %available) nounwind, !map !7

ST_1: StgValue_9 (6)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([12 x i64]* %allocated) nounwind, !map !13

ST_1: StgValue_10 (7)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([12 x i64]* %max) nounwind, !map !19

ST_1: StgValue_11 (8)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([12 x i64]* %need) nounwind, !map !23

ST_1: StgValue_12 (9)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i64 0) nounwind, !map !27

ST_1: StgValue_13 (10)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @banker_algorithm_str) nounwind

ST_1: StgValue_14 (11)  [1/1] 1.59ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:7
:6  br label %.loopexit3


 <State 2>: 2.33ns
ST_2: i (13)  [1/1] 0.00ns
.loopexit3:0  %i = phi i3 [ 0, %0 ], [ %i_1, %.loopexit3.loopexit ]

ST_2: i_cast2_cast (14)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:9
.loopexit3:1  %i_cast2_cast = zext i3 %i to i5

ST_2: tmp_5 (15)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:9
.loopexit3:2  %tmp_5 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i, i2 0)

ST_2: tmp_7 (16)  [1/1] 2.33ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
.loopexit3:3  %tmp_7 = sub i5 %tmp_5, %i_cast2_cast

ST_2: tmp (17)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:7
.loopexit3:4  %tmp = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %i, i32 2)

ST_2: empty (18)  [1/1] 0.00ns
.loopexit3:5  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 4, i64 2) nounwind

ST_2: i_1 (19)  [1/1] 2.26ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:9
.loopexit3:6  %i_1 = add i3 %i, 1

ST_2: StgValue_22 (20)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:7
.loopexit3:7  br i1 %tmp, label %.loopexit.loopexit6, label %.preheader.preheader

ST_2: StgValue_23 (22)  [1/1] 1.59ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:12
.preheader.preheader:0  br label %.preheader

ST_2: StgValue_24 (55)  [1/1] 1.59ns
.loopexit.loopexit6:0  br label %.loopexit


 <State 3>: 4.65ns
ST_3: j (24)  [1/1] 0.00ns
.preheader:0  %j = phi i2 [ %j_1, %.critedge ], [ 0, %.preheader.preheader ]

ST_3: j_cast1 (25)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:12
.preheader:1  %j_cast1 = zext i2 %j to i64

ST_3: j_cast1_cast (26)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
.preheader:2  %j_cast1_cast = zext i2 %j to i5

ST_3: tmp_8 (27)  [1/1] 2.33ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
.preheader:3  %tmp_8 = add i5 %tmp_7, %j_cast1_cast

ST_3: tmp_8_cast (28)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
.preheader:4  %tmp_8_cast = sext i5 %tmp_8 to i64

ST_3: allocated_addr (29)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
.preheader:5  %allocated_addr = getelementptr [12 x i64]* %allocated, i64 0, i64 %tmp_8_cast

ST_3: need_addr (30)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
.preheader:6  %need_addr = getelementptr [12 x i64]* %need, i64 0, i64 %tmp_8_cast

ST_3: tmp_1 (31)  [1/1] 2.07ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:12
.preheader:7  %tmp_1 = icmp eq i2 %j, -1

ST_3: empty_2 (32)  [1/1] 0.00ns
.preheader:8  %empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2) nounwind

ST_3: j_1 (33)  [1/1] 2.17ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:14
.preheader:9  %j_1 = add i2 %j, 1

ST_3: StgValue_35 (34)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:12
.preheader:10  br i1 %tmp_1, label %.loopexit3.loopexit, label %1

ST_3: need_load (36)  [2/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:0  %need_load = load i64* %need_addr, align 8

ST_3: available_addr (37)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:1  %available_addr = getelementptr [3 x i64]* %available, i64 0, i64 %j_cast1

ST_3: available_load (38)  [2/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:2  %available_load = load i64* %available_addr, align 8

ST_3: StgValue_39 (53)  [1/1] 0.00ns
.loopexit3.loopexit:0  br label %.loopexit3


 <State 4>: 2.32ns
ST_4: need_load (36)  [1/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:0  %need_load = load i64* %need_addr, align 8

ST_4: available_load (38)  [1/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:2  %available_load = load i64* %available_addr, align 8

ST_4: allocated_load (41)  [2/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
:5  %allocated_load = load i64* %allocated_addr, align 8


 <State 5>: 8.44ns
ST_5: tmp_2 (39)  [1/1] 3.79ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:3  %tmp_2 = sub nsw i64 %available_load, %need_load

ST_5: StgValue_44 (40)  [1/1] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:17
:4  store i64 %tmp_2, i64* %available_addr, align 8

ST_5: allocated_load (41)  [1/2] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
:5  %allocated_load = load i64* %allocated_addr, align 8

ST_5: tmp_3 (42)  [1/1] 3.79ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
:6  %tmp_3 = add nsw i64 %allocated_load, %need_load

ST_5: StgValue_47 (43)  [1/1] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:18
:7  store i64 %tmp_3, i64* %allocated_addr, align 8

ST_5: tmp_4 (44)  [1/1] 3.73ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:21
:8  %tmp_4 = icmp sgt i64 %need_load, %tmp_2

ST_5: StgValue_49 (45)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:21
:9  br i1 %tmp_4, label %.loopexit.loopexit, label %.critedge

ST_5: tmp_6 (47)  [1/1] 3.79ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:24
.critedge:0  %tmp_6 = add i64 %allocated_load, %available_load

ST_5: StgValue_51 (51)  [1/1] 1.59ns
.loopexit.loopexit:0  br label %.loopexit


 <State 6>: 2.32ns
ST_6: StgValue_52 (48)  [1/1] 2.32ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:24
.critedge:1  store i64 %tmp_6, i64* %available_addr, align 8

ST_6: StgValue_53 (49)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:14
.critedge:2  br label %.preheader


 <State 7>: 0.00ns
ST_7: p_0 (57)  [1/1] 0.00ns
.loopexit:0  %p_0 = phi i2 [ -1, %.loopexit.loopexit ], [ 1, %.loopexit.loopexit6 ]

ST_7: p_0_cast (58)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:35
.loopexit:1  %p_0_cast = sext i2 %p_0 to i64

ST_7: StgValue_56 (59)  [1/1] 0.00ns  loc: RTL_Banker_Algorithm/solution1/banker_algorithm.c:35
.loopexit:2  ret i64 %p_0_cast



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', RTL_Banker_Algorithm/solution1/banker_algorithm.c:9) [13]  (1.59 ns)

 <State 2>: 2.33ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', RTL_Banker_Algorithm/solution1/banker_algorithm.c:9) [13]  (0 ns)
	'sub' operation ('tmp_7', RTL_Banker_Algorithm/solution1/banker_algorithm.c:18) [16]  (2.33 ns)

 <State 3>: 4.65ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', RTL_Banker_Algorithm/solution1/banker_algorithm.c:14) [24]  (0 ns)
	'add' operation ('tmp_8', RTL_Banker_Algorithm/solution1/banker_algorithm.c:18) [27]  (2.33 ns)
	'getelementptr' operation ('need_addr', RTL_Banker_Algorithm/solution1/banker_algorithm.c:17) [30]  (0 ns)
	'load' operation ('need_load', RTL_Banker_Algorithm/solution1/banker_algorithm.c:17) on array 'need' [36]  (2.32 ns)

 <State 4>: 2.32ns
The critical path consists of the following:
	'load' operation ('need_load', RTL_Banker_Algorithm/solution1/banker_algorithm.c:17) on array 'need' [36]  (2.32 ns)

 <State 5>: 8.44ns
The critical path consists of the following:
	'load' operation ('allocated_load', RTL_Banker_Algorithm/solution1/banker_algorithm.c:18) on array 'allocated' [41]  (2.32 ns)
	'add' operation ('tmp_3', RTL_Banker_Algorithm/solution1/banker_algorithm.c:18) [42]  (3.79 ns)
	'store' operation (RTL_Banker_Algorithm/solution1/banker_algorithm.c:18) of variable 'tmp_3', RTL_Banker_Algorithm/solution1/banker_algorithm.c:18 on array 'allocated' [43]  (2.32 ns)

 <State 6>: 2.32ns
The critical path consists of the following:
	'store' operation (RTL_Banker_Algorithm/solution1/banker_algorithm.c:24) of variable 'tmp_6', RTL_Banker_Algorithm/solution1/banker_algorithm.c:24 on array 'available' [48]  (2.32 ns)

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
