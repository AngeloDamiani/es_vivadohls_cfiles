// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _merge_HH_
#define _merge_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "merge_x.h"

namespace ap_rtl {

struct merge : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > i1;
    sc_in< sc_lv<64> > f1;
    sc_in< sc_lv<64> > f2;
    sc_out< sc_lv<4> > arr_address0;
    sc_out< sc_logic > arr_ce0;
    sc_in< sc_lv<64> > arr_q0;
    sc_out< sc_lv<4> > arr_address1;
    sc_out< sc_logic > arr_ce1;
    sc_out< sc_logic > arr_we1;
    sc_out< sc_lv<64> > arr_d1;
    sc_in< sc_lv<64> > arr_q1;


    // Module declarations
    merge(sc_module_name name);
    SC_HAS_PROCESS(merge);

    ~merge();

    sc_trace_file* mVcdFile;

    merge_x* x_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > p_0_load_reg_451;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > i2_1_load_reg_457;
    sc_signal< sc_lv<1> > tmp_1_fu_276_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_463;
    sc_signal< sc_lv<8> > i_1_fu_281_p2;
    sc_signal< sc_lv<8> > i_1_reg_467;
    sc_signal< sc_lv<1> > tmp_3_fu_292_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_12_fu_338_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_343_p2;
    sc_signal< sc_lv<8> > tmp_16_reg_496;
    sc_signal< sc_lv<1> > tmp_6_fu_354_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_359_p2;
    sc_signal< sc_lv<8> > tmp_9_reg_509;
    sc_signal< sc_lv<8> > i_6_fu_365_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > i_5_fu_376_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_18_fu_387_p1;
    sc_signal< sc_lv<64> > tmp_18_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > i_7_fu_396_p2;
    sc_signal< sc_lv<8> > i_7_reg_532;
    sc_signal< sc_lv<1> > tmp_19_fu_391_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_407_p2;
    sc_signal< sc_lv<8> > tmp_21_reg_542;
    sc_signal< sc_lv<4> > x_address0;
    sc_signal< sc_logic > x_ce0;
    sc_signal< sc_logic > x_we0;
    sc_signal< sc_lv<64> > x_d0;
    sc_signal< sc_lv<64> > x_q0;
    sc_signal< sc_lv<8> > i_reg_173;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_10_reg_185;
    sc_signal< sc_lv<8> > i_2_reg_194;
    sc_signal< sc_lv<8> > tmp_4_reg_205;
    sc_signal< sc_lv<8> > i_3_reg_214;
    sc_signal< sc_lv<8> > tmp_17_reg_225;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > i_4_reg_234;
    sc_signal< sc_lv<64> > tmp_s_fu_271_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_287_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_308_p1;
    sc_signal< sc_lv<1> > tmp_7_fu_297_p2;
    sc_signal< sc_lv<64> > tmp_13_fu_323_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_333_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_349_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_371_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_382_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_402_p1;
    sc_signal< sc_lv<8> > p_0_fu_54;
    sc_signal< sc_lv<8> > i1_assign_fu_303_p2;
    sc_signal< sc_lv<8> > i2_1_fu_58;
    sc_signal< sc_lv<8> > i2_fu_249_p2;
    sc_signal< sc_lv<8> > i2_2_fu_318_p2;
    sc_signal< sc_lv<8> > tmp_fu_245_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_arr_address0();
    void thread_arr_address1();
    void thread_arr_ce0();
    void thread_arr_ce1();
    void thread_arr_d1();
    void thread_arr_we1();
    void thread_i1_assign_fu_303_p2();
    void thread_i2_2_fu_318_p2();
    void thread_i2_fu_249_p2();
    void thread_i_1_fu_281_p2();
    void thread_i_5_fu_376_p2();
    void thread_i_6_fu_365_p2();
    void thread_i_7_fu_396_p2();
    void thread_tmp_11_fu_333_p1();
    void thread_tmp_12_fu_338_p2();
    void thread_tmp_13_fu_323_p1();
    void thread_tmp_14_fu_308_p1();
    void thread_tmp_15_fu_371_p1();
    void thread_tmp_16_fu_343_p2();
    void thread_tmp_18_fu_387_p1();
    void thread_tmp_19_fu_391_p2();
    void thread_tmp_1_fu_276_p2();
    void thread_tmp_20_fu_402_p1();
    void thread_tmp_21_fu_407_p2();
    void thread_tmp_2_fu_287_p1();
    void thread_tmp_3_fu_292_p2();
    void thread_tmp_5_fu_349_p1();
    void thread_tmp_6_fu_354_p2();
    void thread_tmp_7_fu_297_p2();
    void thread_tmp_8_fu_382_p1();
    void thread_tmp_9_fu_359_p2();
    void thread_tmp_fu_245_p1();
    void thread_tmp_s_fu_271_p1();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_x_d0();
    void thread_x_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
