// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mergesort.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mergesort::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mergesort::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> mergesort::ap_ST_fsm_state1 = "1";
const sc_lv<6> mergesort::ap_ST_fsm_state2 = "10";
const sc_lv<6> mergesort::ap_ST_fsm_state3 = "100";
const sc_lv<6> mergesort::ap_ST_fsm_state4 = "1000";
const sc_lv<6> mergesort::ap_ST_fsm_state5 = "10000";
const sc_lv<6> mergesort::ap_ST_fsm_state6 = "100000";
const sc_lv<32> mergesort::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mergesort::ap_const_lv32_1 = "1";
const sc_lv<1> mergesort::ap_const_lv1_1 = "1";
const sc_lv<32> mergesort::ap_const_lv32_2 = "10";
const sc_lv<32> mergesort::ap_const_lv32_3 = "11";
const sc_lv<64> mergesort::ap_const_lv64_1 = "1";
const sc_lv<1> mergesort::ap_const_lv1_0 = "0";
const sc_lv<64> mergesort::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mergesort::ap_const_lv32_5 = "101";
const sc_lv<32> mergesort::ap_const_lv32_4 = "100";
const sc_lv<64> mergesort::ap_const_lv64_A = "1010";
const sc_lv<64> mergesort::ap_const_lv64_9 = "1001";
const sc_lv<64> mergesort::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const bool mergesort::ap_const_boolean_1 = true;

mergesort::mergesort(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_merge_fu_154 = new merge("grp_merge_fu_154");
    grp_merge_fu_154->ap_clk(ap_clk);
    grp_merge_fu_154->ap_rst(ap_rst);
    grp_merge_fu_154->ap_start(grp_merge_fu_154_ap_start);
    grp_merge_fu_154->ap_done(grp_merge_fu_154_ap_done);
    grp_merge_fu_154->ap_idle(grp_merge_fu_154_ap_idle);
    grp_merge_fu_154->ap_ready(grp_merge_fu_154_ap_ready);
    grp_merge_fu_154->i1(x_reg_142);
    grp_merge_fu_154->f1(tmp_5_reg_259);
    grp_merge_fu_154->f2(c_assign_1_reg_275);
    grp_merge_fu_154->arr_0(grp_merge_fu_154_arr_0);
    grp_merge_fu_154->arr_0_ap_vld(grp_merge_fu_154_arr_0_ap_vld);
    grp_merge_fu_154->arr_0_read(arr_0_i);
    grp_merge_fu_154->arr_1(grp_merge_fu_154_arr_1);
    grp_merge_fu_154->arr_1_ap_vld(grp_merge_fu_154_arr_1_ap_vld);
    grp_merge_fu_154->arr_1_read(arr_1_i);
    grp_merge_fu_154->arr_2(grp_merge_fu_154_arr_2);
    grp_merge_fu_154->arr_2_ap_vld(grp_merge_fu_154_arr_2_ap_vld);
    grp_merge_fu_154->arr_2_read(arr_2_i);
    grp_merge_fu_154->arr_3(grp_merge_fu_154_arr_3);
    grp_merge_fu_154->arr_3_ap_vld(grp_merge_fu_154_arr_3_ap_vld);
    grp_merge_fu_154->arr_3_read(arr_3_i);
    grp_merge_fu_154->arr_4(grp_merge_fu_154_arr_4);
    grp_merge_fu_154->arr_4_ap_vld(grp_merge_fu_154_arr_4_ap_vld);
    grp_merge_fu_154->arr_4_read(arr_4_i);
    grp_merge_fu_154->arr_5(grp_merge_fu_154_arr_5);
    grp_merge_fu_154->arr_5_ap_vld(grp_merge_fu_154_arr_5_ap_vld);
    grp_merge_fu_154->arr_5_read(arr_5_i);
    grp_merge_fu_154->arr_6(grp_merge_fu_154_arr_6);
    grp_merge_fu_154->arr_6_ap_vld(grp_merge_fu_154_arr_6_ap_vld);
    grp_merge_fu_154->arr_6_read(arr_6_i);
    grp_merge_fu_154->arr_7(grp_merge_fu_154_arr_7);
    grp_merge_fu_154->arr_7_ap_vld(grp_merge_fu_154_arr_7_ap_vld);
    grp_merge_fu_154->arr_7_read(arr_7_i);
    grp_merge_fu_154->arr_8(grp_merge_fu_154_arr_8);
    grp_merge_fu_154->arr_8_ap_vld(grp_merge_fu_154_arr_8_ap_vld);
    grp_merge_fu_154->arr_8_read(arr_8_i);
    grp_merge_fu_154->arr_9(grp_merge_fu_154_arr_9);
    grp_merge_fu_154->arr_9_ap_vld(grp_merge_fu_154_arr_9_ap_vld);
    grp_merge_fu_154->arr_9_read(arr_9_i);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_194_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_194_p2 );

    SC_METHOD(thread_arr_0_o);
    sensitive << ( arr_0_i );
    sensitive << ( grp_merge_fu_154_arr_0 );
    sensitive << ( grp_merge_fu_154_arr_0_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_0_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_0_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_1_o);
    sensitive << ( arr_1_i );
    sensitive << ( grp_merge_fu_154_arr_1 );
    sensitive << ( grp_merge_fu_154_arr_1_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_1_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_1_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_2_o);
    sensitive << ( arr_2_i );
    sensitive << ( grp_merge_fu_154_arr_2 );
    sensitive << ( grp_merge_fu_154_arr_2_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_2_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_2_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_3_o);
    sensitive << ( arr_3_i );
    sensitive << ( grp_merge_fu_154_arr_3 );
    sensitive << ( grp_merge_fu_154_arr_3_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_3_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_3_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_4_o);
    sensitive << ( arr_4_i );
    sensitive << ( grp_merge_fu_154_arr_4 );
    sensitive << ( grp_merge_fu_154_arr_4_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_4_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_4_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_5_o);
    sensitive << ( arr_5_i );
    sensitive << ( grp_merge_fu_154_arr_5 );
    sensitive << ( grp_merge_fu_154_arr_5_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_5_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_5_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_6_o);
    sensitive << ( arr_6_i );
    sensitive << ( grp_merge_fu_154_arr_6 );
    sensitive << ( grp_merge_fu_154_arr_6_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_6_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_6_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_7_o);
    sensitive << ( arr_7_i );
    sensitive << ( grp_merge_fu_154_arr_7 );
    sensitive << ( grp_merge_fu_154_arr_7_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_7_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_7_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_8_o);
    sensitive << ( arr_8_i );
    sensitive << ( grp_merge_fu_154_arr_8 );
    sensitive << ( grp_merge_fu_154_arr_8_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_8_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_8_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_9_o);
    sensitive << ( arr_9_i );
    sensitive << ( grp_merge_fu_154_arr_9 );
    sensitive << ( grp_merge_fu_154_arr_9_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_arr_9_o_ap_vld);
    sensitive << ( grp_merge_fu_154_arr_9_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_c_assign_1_fu_239_p3);
    sensitive << ( c_assign_reg_264 );
    sensitive << ( tmp_i_fu_234_p2 );

    SC_METHOD(thread_c_assign_fu_224_p2);
    sensitive << ( m_1_reg_249 );
    sensitive << ( tmp1_fu_212_p2 );

    SC_METHOD(thread_grp_merge_fu_154_ap_start);
    sensitive << ( ap_reg_grp_merge_fu_154_ap_start );

    SC_METHOD(thread_m_1_fu_200_p2);
    sensitive << ( m_reg_130 );

    SC_METHOD(thread_tmp1_fu_212_p2);
    sensitive << ( x_reg_142 );

    SC_METHOD(thread_tmp_3_fu_206_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( x_reg_142 );

    SC_METHOD(thread_tmp_5_fu_218_p2);
    sensitive << ( m_reg_130 );
    sensitive << ( tmp1_fu_212_p2 );

    SC_METHOD(thread_tmp_fu_194_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_reg_130 );

    SC_METHOD(thread_tmp_i_fu_234_p2);
    sensitive << ( c_assign_reg_264 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_x_1_fu_229_p2);
    sensitive << ( m_1_reg_249 );
    sensitive << ( x_reg_142 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_194_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_3_fu_206_p2 );
    sensitive << ( grp_merge_fu_154_ap_done );
    sensitive << ( ap_CS_fsm_state6 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_reg_grp_merge_fu_154_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mergesort_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, arr_0_i, "(port)arr_0_i");
    sc_trace(mVcdFile, arr_0_o, "(port)arr_0_o");
    sc_trace(mVcdFile, arr_0_o_ap_vld, "(port)arr_0_o_ap_vld");
    sc_trace(mVcdFile, arr_1_i, "(port)arr_1_i");
    sc_trace(mVcdFile, arr_1_o, "(port)arr_1_o");
    sc_trace(mVcdFile, arr_1_o_ap_vld, "(port)arr_1_o_ap_vld");
    sc_trace(mVcdFile, arr_2_i, "(port)arr_2_i");
    sc_trace(mVcdFile, arr_2_o, "(port)arr_2_o");
    sc_trace(mVcdFile, arr_2_o_ap_vld, "(port)arr_2_o_ap_vld");
    sc_trace(mVcdFile, arr_3_i, "(port)arr_3_i");
    sc_trace(mVcdFile, arr_3_o, "(port)arr_3_o");
    sc_trace(mVcdFile, arr_3_o_ap_vld, "(port)arr_3_o_ap_vld");
    sc_trace(mVcdFile, arr_4_i, "(port)arr_4_i");
    sc_trace(mVcdFile, arr_4_o, "(port)arr_4_o");
    sc_trace(mVcdFile, arr_4_o_ap_vld, "(port)arr_4_o_ap_vld");
    sc_trace(mVcdFile, arr_5_i, "(port)arr_5_i");
    sc_trace(mVcdFile, arr_5_o, "(port)arr_5_o");
    sc_trace(mVcdFile, arr_5_o_ap_vld, "(port)arr_5_o_ap_vld");
    sc_trace(mVcdFile, arr_6_i, "(port)arr_6_i");
    sc_trace(mVcdFile, arr_6_o, "(port)arr_6_o");
    sc_trace(mVcdFile, arr_6_o_ap_vld, "(port)arr_6_o_ap_vld");
    sc_trace(mVcdFile, arr_7_i, "(port)arr_7_i");
    sc_trace(mVcdFile, arr_7_o, "(port)arr_7_o");
    sc_trace(mVcdFile, arr_7_o_ap_vld, "(port)arr_7_o_ap_vld");
    sc_trace(mVcdFile, arr_8_i, "(port)arr_8_i");
    sc_trace(mVcdFile, arr_8_o, "(port)arr_8_o");
    sc_trace(mVcdFile, arr_8_o_ap_vld, "(port)arr_8_o_ap_vld");
    sc_trace(mVcdFile, arr_9_i, "(port)arr_9_i");
    sc_trace(mVcdFile, arr_9_o, "(port)arr_9_o");
    sc_trace(mVcdFile, arr_9_o_ap_vld, "(port)arr_9_o_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_1_fu_200_p2, "m_1_fu_200_p2");
    sc_trace(mVcdFile, m_1_reg_249, "m_1_reg_249");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_194_p2, "tmp_fu_194_p2");
    sc_trace(mVcdFile, tmp_5_fu_218_p2, "tmp_5_fu_218_p2");
    sc_trace(mVcdFile, tmp_5_reg_259, "tmp_5_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_3_fu_206_p2, "tmp_3_fu_206_p2");
    sc_trace(mVcdFile, c_assign_fu_224_p2, "c_assign_fu_224_p2");
    sc_trace(mVcdFile, c_assign_reg_264, "c_assign_reg_264");
    sc_trace(mVcdFile, x_1_fu_229_p2, "x_1_fu_229_p2");
    sc_trace(mVcdFile, x_1_reg_270, "x_1_reg_270");
    sc_trace(mVcdFile, c_assign_1_fu_239_p3, "c_assign_1_fu_239_p3");
    sc_trace(mVcdFile, c_assign_1_reg_275, "c_assign_1_reg_275");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_merge_fu_154_ap_start, "grp_merge_fu_154_ap_start");
    sc_trace(mVcdFile, grp_merge_fu_154_ap_done, "grp_merge_fu_154_ap_done");
    sc_trace(mVcdFile, grp_merge_fu_154_ap_idle, "grp_merge_fu_154_ap_idle");
    sc_trace(mVcdFile, grp_merge_fu_154_ap_ready, "grp_merge_fu_154_ap_ready");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_0, "grp_merge_fu_154_arr_0");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_0_ap_vld, "grp_merge_fu_154_arr_0_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_1, "grp_merge_fu_154_arr_1");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_1_ap_vld, "grp_merge_fu_154_arr_1_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_2, "grp_merge_fu_154_arr_2");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_2_ap_vld, "grp_merge_fu_154_arr_2_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_3, "grp_merge_fu_154_arr_3");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_3_ap_vld, "grp_merge_fu_154_arr_3_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_4, "grp_merge_fu_154_arr_4");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_4_ap_vld, "grp_merge_fu_154_arr_4_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_5, "grp_merge_fu_154_arr_5");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_5_ap_vld, "grp_merge_fu_154_arr_5_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_6, "grp_merge_fu_154_arr_6");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_6_ap_vld, "grp_merge_fu_154_arr_6_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_7, "grp_merge_fu_154_arr_7");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_7_ap_vld, "grp_merge_fu_154_arr_7_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_8, "grp_merge_fu_154_arr_8");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_8_ap_vld, "grp_merge_fu_154_arr_8_ap_vld");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_9, "grp_merge_fu_154_arr_9");
    sc_trace(mVcdFile, grp_merge_fu_154_arr_9_ap_vld, "grp_merge_fu_154_arr_9_ap_vld");
    sc_trace(mVcdFile, m_reg_130, "m_reg_130");
    sc_trace(mVcdFile, x_reg_142, "x_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_reg_grp_merge_fu_154_ap_start, "ap_reg_grp_merge_fu_154_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp1_fu_212_p2, "tmp1_fu_212_p2");
    sc_trace(mVcdFile, tmp_i_fu_234_p2, "tmp_i_fu_234_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("mergesort.hdltvin.dat");
    mHdltvoutHandle.open("mergesort.hdltvout.dat");
}

mergesort::~mergesort() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_merge_fu_154;
}

void mergesort::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_merge_fu_154_ap_start = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_reg_grp_merge_fu_154_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_ap_ready.read())) {
            ap_reg_grp_merge_fu_154_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_3_fu_206_p2.read(), ap_const_lv1_0))) {
        m_reg_130 = m_1_reg_249.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_reg_130 = ap_const_lv64_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(grp_merge_fu_154_ap_done.read(), ap_const_logic_1))) {
        x_reg_142 = x_1_reg_270.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_fu_194_p2.read(), ap_const_lv1_1))) {
        x_reg_142 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_assign_1_reg_275 = c_assign_1_fu_239_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_206_p2.read()))) {
        c_assign_reg_264 = c_assign_fu_224_p2.read();
        tmp_5_reg_259 = tmp_5_fu_218_p2.read();
        x_1_reg_270 = x_1_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_194_p2.read(), ap_const_lv1_1))) {
        m_1_reg_249 = m_1_fu_200_p2.read();
    }
}

void mergesort::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mergesort::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mergesort::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mergesort::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mergesort::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mergesort::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mergesort::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_194_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mergesort::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mergesort::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_194_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mergesort::thread_arr_0_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_0_ap_vld.read()))) {
        arr_0_o = grp_merge_fu_154_arr_0.read();
    } else {
        arr_0_o = arr_0_i.read();
    }
}

void mergesort::thread_arr_0_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_0_o_ap_vld = grp_merge_fu_154_arr_0_ap_vld.read();
    } else {
        arr_0_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_1_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_1_ap_vld.read()))) {
        arr_1_o = grp_merge_fu_154_arr_1.read();
    } else {
        arr_1_o = arr_1_i.read();
    }
}

void mergesort::thread_arr_1_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_1_o_ap_vld = grp_merge_fu_154_arr_1_ap_vld.read();
    } else {
        arr_1_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_2_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_2_ap_vld.read()))) {
        arr_2_o = grp_merge_fu_154_arr_2.read();
    } else {
        arr_2_o = arr_2_i.read();
    }
}

void mergesort::thread_arr_2_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_2_o_ap_vld = grp_merge_fu_154_arr_2_ap_vld.read();
    } else {
        arr_2_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_3_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_3_ap_vld.read()))) {
        arr_3_o = grp_merge_fu_154_arr_3.read();
    } else {
        arr_3_o = arr_3_i.read();
    }
}

void mergesort::thread_arr_3_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_3_o_ap_vld = grp_merge_fu_154_arr_3_ap_vld.read();
    } else {
        arr_3_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_4_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_4_ap_vld.read()))) {
        arr_4_o = grp_merge_fu_154_arr_4.read();
    } else {
        arr_4_o = arr_4_i.read();
    }
}

void mergesort::thread_arr_4_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_4_o_ap_vld = grp_merge_fu_154_arr_4_ap_vld.read();
    } else {
        arr_4_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_5_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_5_ap_vld.read()))) {
        arr_5_o = grp_merge_fu_154_arr_5.read();
    } else {
        arr_5_o = arr_5_i.read();
    }
}

void mergesort::thread_arr_5_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_5_o_ap_vld = grp_merge_fu_154_arr_5_ap_vld.read();
    } else {
        arr_5_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_6_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_6_ap_vld.read()))) {
        arr_6_o = grp_merge_fu_154_arr_6.read();
    } else {
        arr_6_o = arr_6_i.read();
    }
}

void mergesort::thread_arr_6_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_6_o_ap_vld = grp_merge_fu_154_arr_6_ap_vld.read();
    } else {
        arr_6_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_7_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_7_ap_vld.read()))) {
        arr_7_o = grp_merge_fu_154_arr_7.read();
    } else {
        arr_7_o = arr_7_i.read();
    }
}

void mergesort::thread_arr_7_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_7_o_ap_vld = grp_merge_fu_154_arr_7_ap_vld.read();
    } else {
        arr_7_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_8_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_8_ap_vld.read()))) {
        arr_8_o = grp_merge_fu_154_arr_8.read();
    } else {
        arr_8_o = arr_8_i.read();
    }
}

void mergesort::thread_arr_8_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_8_o_ap_vld = grp_merge_fu_154_arr_8_ap_vld.read();
    } else {
        arr_8_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_arr_9_o() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, grp_merge_fu_154_arr_9_ap_vld.read()))) {
        arr_9_o = grp_merge_fu_154_arr_9.read();
    } else {
        arr_9_o = arr_9_i.read();
    }
}

void mergesort::thread_arr_9_o_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        arr_9_o_ap_vld = grp_merge_fu_154_arr_9_ap_vld.read();
    } else {
        arr_9_o_ap_vld = ap_const_logic_0;
    }
}

void mergesort::thread_c_assign_1_fu_239_p3() {
    c_assign_1_fu_239_p3 = (!tmp_i_fu_234_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_i_fu_234_p2.read()[0].to_bool())? c_assign_reg_264.read(): ap_const_lv64_9);
}

void mergesort::thread_c_assign_fu_224_p2() {
    c_assign_fu_224_p2 = (!tmp1_fu_212_p2.read().is_01() || !m_1_reg_249.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp1_fu_212_p2.read()) + sc_biguint<64>(m_1_reg_249.read()));
}

void mergesort::thread_grp_merge_fu_154_ap_start() {
    grp_merge_fu_154_ap_start = ap_reg_grp_merge_fu_154_ap_start.read();
}

void mergesort::thread_m_1_fu_200_p2() {
    m_1_fu_200_p2 = (!ap_const_lv64_1.is_01())? sc_lv<64>(): m_reg_130.read() << (unsigned short)ap_const_lv64_1.to_uint();
}

void mergesort::thread_tmp1_fu_212_p2() {
    tmp1_fu_212_p2 = (!x_reg_142.read().is_01() || !ap_const_lv64_FFFFFFFFFFFFFFFF.is_01())? sc_lv<64>(): (sc_biguint<64>(x_reg_142.read()) + sc_bigint<64>(ap_const_lv64_FFFFFFFFFFFFFFFF));
}

void mergesort::thread_tmp_3_fu_206_p2() {
    tmp_3_fu_206_p2 = (!x_reg_142.read().is_01() || !ap_const_lv64_9.is_01())? sc_lv<1>(): (sc_bigint<64>(x_reg_142.read()) < sc_bigint<64>(ap_const_lv64_9));
}

void mergesort::thread_tmp_5_fu_218_p2() {
    tmp_5_fu_218_p2 = (!tmp1_fu_212_p2.read().is_01() || !m_reg_130.read().is_01())? sc_lv<64>(): (sc_biguint<64>(tmp1_fu_212_p2.read()) + sc_biguint<64>(m_reg_130.read()));
}

void mergesort::thread_tmp_fu_194_p2() {
    tmp_fu_194_p2 = (!m_reg_130.read().is_01() || !ap_const_lv64_A.is_01())? sc_lv<1>(): (sc_bigint<64>(m_reg_130.read()) < sc_bigint<64>(ap_const_lv64_A));
}

void mergesort::thread_tmp_i_fu_234_p2() {
    tmp_i_fu_234_p2 = (!c_assign_reg_264.read().is_01() || !ap_const_lv64_9.is_01())? sc_lv<1>(): (sc_bigint<64>(c_assign_reg_264.read()) < sc_bigint<64>(ap_const_lv64_9));
}

void mergesort::thread_x_1_fu_229_p2() {
    x_1_fu_229_p2 = (!m_1_reg_249.read().is_01() || !x_reg_142.read().is_01())? sc_lv<64>(): (sc_biguint<64>(m_1_reg_249.read()) + sc_biguint<64>(x_reg_142.read()));
}

void mergesort::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_194_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_3_fu_206_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_merge_fu_154_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

void mergesort::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_0_i\" :  \"" << arr_0_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_0_o\" :  \"" << arr_0_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_0_o_ap_vld\" :  \"" << arr_0_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_1_i\" :  \"" << arr_1_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_1_o\" :  \"" << arr_1_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_1_o_ap_vld\" :  \"" << arr_1_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_2_i\" :  \"" << arr_2_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_2_o\" :  \"" << arr_2_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_2_o_ap_vld\" :  \"" << arr_2_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_3_i\" :  \"" << arr_3_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_3_o\" :  \"" << arr_3_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_3_o_ap_vld\" :  \"" << arr_3_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_4_i\" :  \"" << arr_4_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_4_o\" :  \"" << arr_4_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_4_o_ap_vld\" :  \"" << arr_4_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_5_i\" :  \"" << arr_5_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_5_o\" :  \"" << arr_5_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_5_o_ap_vld\" :  \"" << arr_5_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_6_i\" :  \"" << arr_6_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_6_o\" :  \"" << arr_6_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_6_o_ap_vld\" :  \"" << arr_6_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_7_i\" :  \"" << arr_7_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_7_o\" :  \"" << arr_7_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_7_o_ap_vld\" :  \"" << arr_7_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_8_i\" :  \"" << arr_8_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_8_o\" :  \"" << arr_8_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_8_o_ap_vld\" :  \"" << arr_8_o_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"arr_9_i\" :  \"" << arr_9_i.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_9_o\" :  \"" << arr_9_o.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"arr_9_o_ap_vld\" :  \"" << arr_9_o_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

