// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bubble_sort_HH_
#define _bubble_sort_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct bubble_sort : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > arr_address0;
    sc_out< sc_logic > arr_ce0;
    sc_out< sc_logic > arr_we0;
    sc_out< sc_lv<64> > arr_d0;
    sc_in< sc_lv<64> > arr_q0;
    sc_out< sc_lv<4> > arr_address1;
    sc_out< sc_logic > arr_ce1;
    sc_out< sc_logic > arr_we1;
    sc_out< sc_lv<64> > arr_d1;
    sc_in< sc_lv<64> > arr_q1;


    // Module declarations
    bubble_sort(sc_module_name name);
    SC_HAS_PROCESS(bubble_sort);

    ~bubble_sort();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_fu_163_p2;
    sc_signal< sc_lv<1> > tmp_reg_213;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > j_1_fu_169_p2;
    sc_signal< sc_lv<4> > j_1_reg_217;
    sc_signal< sc_lv<8> > index_1_assign_cast_fu_175_p1;
    sc_signal< sc_lv<8> > index_1_assign_cast_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > i_fu_185_p2;
    sc_signal< sc_lv<7> > i_reg_230;
    sc_signal< sc_lv<4> > arr_addr_reg_235;
    sc_signal< sc_lv<1> > tmp_2_fu_179_p2;
    sc_signal< sc_lv<4> > arr_addr_1_reg_240;
    sc_signal< sc_lv<4> > j_reg_79;
    sc_signal< sc_lv<1> > tmp_8_fu_201_p2;
    sc_signal< sc_lv<8> > lastSwap_reg_90;
    sc_signal< sc_lv<8> > lastSwap_1_reg_102;
    sc_signal< sc_lv<8> > currentSwap_1_phi_fu_142_p4;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > is_sorted_reg_115;
    sc_signal< sc_lv<2> > is_sorted_1_phi_fu_154_p4;
    sc_signal< sc_lv<7> > currentSwap_reg_127;
    sc_signal< sc_lv<1> > tmp_7_fu_207_p2;
    sc_signal< sc_lv<64> > tmp_3_fu_191_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_196_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_9;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_arr_address0();
    void thread_arr_address1();
    void thread_arr_ce0();
    void thread_arr_ce1();
    void thread_arr_d0();
    void thread_arr_d1();
    void thread_arr_we0();
    void thread_arr_we1();
    void thread_currentSwap_1_phi_fu_142_p4();
    void thread_i_fu_185_p2();
    void thread_index_1_assign_cast_fu_175_p1();
    void thread_is_sorted_1_phi_fu_154_p4();
    void thread_j_1_fu_169_p2();
    void thread_tmp_2_fu_179_p2();
    void thread_tmp_3_fu_191_p1();
    void thread_tmp_6_fu_196_p1();
    void thread_tmp_7_fu_207_p2();
    void thread_tmp_8_fu_201_p2();
    void thread_tmp_fu_163_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
